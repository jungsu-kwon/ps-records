{"id":430711847,"lang":"python3","time":"7Â months, 3Â weeks","timestamp":1607988681,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/430711847/","is_pending":"Not Pending","title":"Missing Ranges","memory":"14.3 MB","code":"class Solution:\n    def make_string(self,start,end):\n        if start == end : \n            return str(start)\n        else :\n            return '{}->{}'.format(start,end)\n    def validate_interval(self,start,end):\n        if start > end : \n            return False\n        return True\n\n    def findMissingRanges(self, nums: List[int], lower: int, upper: int) -> List[str]:\n        ans =  []\n        if not nums : \n            ans.append(self.make_string(lower,upper))\n            return ans\n        \n        start, end = lower, nums[0]-1\n        if self.validate_interval(start,end):\n            ans.append(self.make_string(start,end))\n        for i,num in enumerate(nums[:-1]):\n            start, end = num+1, nums[i+1] -1 \n\n            if self.validate_interval(start,end):\n                ans.append(self.make_string(start,end))\n\n        start, end = nums[-1]+1, upper\n        if self.validate_interval(start,end):\n            ans.append(self.make_string(start,end))\n        return ans\n\n\n\n\n\n        ","compare_result":"11111111111111111111111111111111111111","title_slug":"missing-ranges"}