{"id":337956350,"lang":"python3","time":"1 year, 2 months","timestamp":1589229751,"status_display":"Accepted","runtime":"992 ms","url":"/submissions/detail/337956350/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"14.2 MB","code":"class Solution:\n    def lengthOfLIS(self, nums):\n        n = len(nums)\n        if n == 0 : \n            return 0\n        dp = [0 for i in range(n)]\n        dp_max = 0\n        for i in range(n):\n            maxi = 0 \n            num = nums[i]\n            for j in range(i):\n                cand = nums[j]\n                if cand < num : \n                    maxi = max(maxi,dp[j])\n            dp[i] = maxi + 1 \n            dp_max = max(dp_max,dp[i])\n        return dp_max\n\n                \n\n","compare_result":"111111111111111111111111","title_slug":"longest-increasing-subsequence"}