// https://leetcode.com/problems/design-compressed-string-iterator

class StringIterator:
    def __init__(self, compressedString):
        self.parsed = [compressedString[0]]
        temp_num = ''
        for char in compressedString[1:] : 
            if char.isalpha():
                self.parsed.append(int(temp_num))
                self.parsed.append(char)
                temp_num =''
            else : 
                temp_num += char
        self.parsed.append(int(temp_num))
        self.n = len(self.parsed)
        self.ind = 0 
    def next(self):
        if self.hasNext() : 
            if self.parsed[self.ind+1] > 0 : 
                self.parsed[self.ind+1] -= 1 
                return self.parsed[self.ind]
            if self.parsed[self.ind+1] == 0 :
                self.ind += 2 
                self.parsed[self.ind+1] -= 1 
                return self.parsed[self.ind]
        else :     
            return ' '
                

    def hasNext(self):
        if self.ind < self.n - 2 : 
            return True
        elif self.ind > self.n -1 :
            return False
        elif self.ind == self.n - 2 :  
            if self.parsed[self.ind + 1] > 0 : 
                return True
        return False
# Your StringIterator object will be instantiated and called as such:
# obj = StringIterator(compressedString)
# param_1 = obj.next()
# param_2 = obj.hasNext()