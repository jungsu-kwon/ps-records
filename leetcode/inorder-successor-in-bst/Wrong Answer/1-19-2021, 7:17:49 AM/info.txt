{"id":444754387,"lang":"python3","time":"6 months, 2 weeks","timestamp":1611008269,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/444754387/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isLeaf(self,root):\n        if root.left is None and root.right is None:\n            return True\n        return False\n\n    def inorderSuccessor(self, root: 'TreeNode', p: 'TreeNode') -> 'TreeNode':\n        if p.right is not None:\n            return p.right\n        startNode = root\n        miniLarger = None\n\n\n        while startNode:\n            if startNode.val > p.val:\n                if not miniLarger:\n                    miniLarger = startNode\n                else:\n                    miniLarger = min([startNode,miniLarger],key=lambda x : x.val)\n                \n            \n            \n            if startNode.val > p.val:\n                startNode = startNode.left\n            else:\n                startNode = startNode.right\n        return miniLarger\n            \n\n\n            \n","compare_result":"111111111111110111110100","title_slug":"inorder-successor-in-bst"}