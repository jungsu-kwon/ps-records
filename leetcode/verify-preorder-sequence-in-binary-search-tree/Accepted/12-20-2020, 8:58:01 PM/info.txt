{"id":432595581,"lang":"python3","time":"7 months, 2 weeks","timestamp":1608465481,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/432595581/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"15.1 MB","code":"class Solution:\n    def isLeftChild(self,i):\n        return self.preorder[i-1] > self.preorder[i]\n\n    def verifyPreorder(self, preorder: List[int]) -> bool:\n        self.preorder = preorder\n        if not self.preorder : \n            return True\n        hardMinInd = None\n        hardMin = -float(\"inf\")\n        maxi = preorder[0]\n        for i,num in enumerate(preorder) :\n            if i == 0 :\n                continue\n            if num < hardMin :\n                return False\n            \n            if not self.isLeftChild(i):\n                if maxi < num :\n                    hardMin = maxi\n                    maxi = num \n                else :\n                    j = i - 1 if hardMinInd == None else hardMinInd\n                    while self.preorder[j] < num :\n                        j -= 1\n                    hardMinInd = j + 1 \n                    hardMin = self.preorder[j+1]\n        return True\n                \n                \n\n\n\n\n\n\n            \n\n\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"verify-preorder-sequence-in-binary-search-tree"}