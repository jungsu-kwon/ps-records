{"id":432428931,"lang":"python3","time":"7Â months, 2Â weeks","timestamp":1608427928,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/432428931/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"N/A","code":"class Solution:\n    def isLeftChild(self,i):\n        if i == 0 :\n            return True\n        return self.preorder[i-1] > self.preorder[i]\n\n    def verifyPreorder(self, preorder: List[int]) -> bool:\n        self.preorder = preorder\n        if not self.preorder : \n            return True\n\n        hardMin = -float(\"inf\")\n        for i,num in enumerate(preorder) :\n            if i == 0 :\n                continue\n            if not self.isLeftChild(i):\n                parent_ind = i-1\n                while parent_ind >=0 and self.isLeftChild(parent_ind) and self.preorder[parent_ind] < self.preorder[i] :\n                    parent_ind -= 1\n                parent_ind += 1 \n                hardMin = max(self.preorder[parent_ind],hardMin)\n                if num < hardMin:\n                    return False\n            else :\n                if num < hardMin:\n                    return False\n                \n        return True\n\n                \n\n\n\n\n\n\n\n            \n\n\n\n        ","compare_result":"111111111111110111111111111111111111111111101101101111111111001","title_slug":"verify-preorder-sequence-in-binary-search-tree"}