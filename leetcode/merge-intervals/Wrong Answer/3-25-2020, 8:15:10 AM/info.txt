{"id":315628269,"lang":"python3","time":"1 year, 4 months","timestamp":1585091710,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/315628269/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution():\n    def overlap(self,first,second):\n        f1,f2 = first \n        s1,s2 = second\n        if f1 <= s2 and s1<=f2 : \n            return True\n        return False\n    def helper(self,first,second,ind):\n        f1,f2 = first \n        s1,s2 = second\n        self.intervals_sorted[ind] = [f1,s2]\n        self.intervals_sorted.pop(ind+1)\n\n\n    def merge(self,intervals):\n        ind = 0\n        n = len(intervals)\n        if n <= 1 : \n            return intervals\n        cur_len = n\n        self.intervals_sorted = sorted(intervals)\n        while ind < cur_len - 1:\n            first,second = self.intervals_sorted[ind],self.intervals_sorted[ind+1]\n            if self.overlap(first,second):\n                self.helper(first,second,ind)\n                cur_len -= 1 \n            else : \n                ind += 1 \n        return self.intervals_sorted\n            ","compare_result":"1111111111100111011101111101111111111111101111111111111111011111110111111111101111011011101111110101011101011111111111101100111011000010011000101100000000000000000000001","title_slug":"merge-intervals"}