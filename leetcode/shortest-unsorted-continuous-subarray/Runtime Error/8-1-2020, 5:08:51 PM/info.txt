{"id":374353087,"lang":"python3","time":"1Â year","timestamp":1596269331,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/374353087/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"N/A","code":"class Solution:\n    def findUnsortedSubarray(self, nums):\n        n = len(nums)\n        if n <= 1 : \n            return 0 \n        # find leftmost and rightmost nonsorted elem\n        left_ind,right_ind = None,None\n        for i in range(1,n):\n            if nums[i] < nums[i-1]:\n                left_ind = i\n                break\n        for i in range(1,n):\n            if nums[n-i] < nums[n-i-1]  : \n                right_ind = n-i-1\n                break\n        # it means array is sorted\n        if left_ind == None or right_ind == None : \n            return 0 \n\n        # find mini and maxi in unsorted segment\n        mini,maxi = min(nums[left_ind:right_ind+1]),max(nums[left_ind:right_ind+1])\n        for i,num in enumerate(nums) : \n            if num > mini : \n                left = i\n                break\n        for i,num in enumerate(nums[::-1]):\n            if num < maxi : \n                right = n-i-1\n                break\n        return right - left + 1 \n\n","compare_result":"1111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"shortest-unsorted-continuous-subarray"}