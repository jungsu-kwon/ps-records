{"id":374292694,"lang":"python3","time":"1Â year","timestamp":1596257633,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/374292694/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"N/A","code":"class Solution:\n    def findUnsortedSubarray(self, nums):\n        if len(nums) <=1 : \n            return 0 \n        prev = nums[0]\n        mini,maxi = None,None\n        for i,num in enumerate(nums) : \n            # find first decreasing element\n            if num < prev : \n                mini = num\n                break\n            prev = num\n        for i,num in enumerate(nums) : \n            if num > mini : \n                start_ind = i\n                break\n        prev = nums[-1]\n        for i,num in enumerate(nums[::-1]):\n            if num > prev : \n                maxi = num\n                break\n            prev = num\n        for i,num in enumerate(nums[::-1]):\n            if num < maxi : \n                end_ind = len(nums)-1 -i\n                break\n        if maxi == None and mini  == None : \n            return 0\n        return end_ind - start_ind + 1 \n\n\n\n\n\n\n\n","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"shortest-unsorted-continuous-subarray"}