{"id":377687719,"lang":"python3","time":"12Â months","timestamp":1596856261,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/377687719/","is_pending":"Not Pending","title":"Dungeon Game","memory":"N/A","code":"class Solution:\n    def valid_children(self,node,hp,mini):\n        (i,j),children = node,[]\n        for loc in [[i+1,j],[i,j+1]]:\n            if loc[0] == self.h or loc[1] == self.w :\n                continue\n            hp_ = hp + self.dungeon[loc[0]][loc[1]]\n            mini_ = min(mini,hp_)\n            children.append(loc+[hp_,mini_])\n        return children\n\n    def calculateMinimumHP(self, dungeon):\n        self.h,self.w = len(dungeon),len(dungeon[0])\n        self.dungeon =dungeon\n        #dp = [[None for i in range(self.w)] for j in range(self.h)]\n\n        self.mini = None\n        self.stack = [(0,0,dungeon[0][0],dungeon[0][0])]\n        while self.stack : \n            x,y,hp,mini = self.stack.pop(0)\n            if x == self.h-1 and y == self.w-1:\n                self.mini = mini if self.mini == None else max(mini,self.mini)\n            valid_children = self.valid_children((x,y),hp,mini)\n            self.stack = valid_children + self.stack\n        return max(1-self.mini,1)\n\n            \n\n","compare_result":"111111111111111111111111111111111111111110000","title_slug":"dungeon-game"}