{"id":297558870,"lang":"python3","time":"1 year, 6 months","timestamp":1580046885,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/297558870/","is_pending":"Not Pending","title":"Clone Graph","memory":"12.8 MB","code":"class Solution:\n    def getNode(self,i): \n        if self.nodes[i] == 0 : \n            self.nodes[i] = Node(i)\n        return self.nodes[i]\n    def cloneGraph(self, Node):\n        self.nodes = [0] * 101\n        self.visited = set([])\n        if Node == None :\n            return None\n\n        self.stack = [Node]\n\n        while self.stack :\n            node = self.stack.pop()\n            if node.val in self.visited:\n                continue\n            node_copy = self.getNode(node.val)\n            for neighbor in node.neighbors:\n                node_copy.neighbors.append(self.getNode(neighbor.val))\n                if not neighbor.val in self.visited : \n                    self.stack.append(neighbor)\n            self.visited.add(node.val)\n        return self.nodes[Node.val]\n            \n        ","compare_result":"111111111111111111111","title_slug":"clone-graph"}