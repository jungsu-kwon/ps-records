{"id":315321224,"lang":"python3","time":"1Â year, 4Â months","timestamp":1585004262,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/315321224/","is_pending":"Not Pending","title":"Permutations II","memory":"N/A","code":"class Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        #ret = set([])\n        ret = []\n        \n        def backtrack(first=0):\n            if first == n : \n                ret.append(nums[:])\n            else : \n                for i in range(first,n):\n                    if first != i and nums[i] == nums[first] : \n                        continue\n                    nums[i],nums[first] = nums[first],nums[i]\n                    backtrack(first+1)\n                    nums[i],nums[first] = nums[first],nums[i]\n        n = len(nums)\n        backtrack()\n        return ret \n        \n        ","compare_result":"111110101001000111100000100010","title_slug":"permutations-ii"}