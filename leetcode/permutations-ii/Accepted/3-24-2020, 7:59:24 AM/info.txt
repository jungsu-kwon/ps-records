{"id":315321560,"lang":"python3","time":"1Â year, 4Â months","timestamp":1585004364,"status_display":"Accepted","runtime":"292 ms","url":"/submissions/detail/315321560/","is_pending":"Not Pending","title":"Permutations II","memory":"12.9 MB","code":"class Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        ret = set([])\n        #ret = []\n        \n        def backtrack(first=0):\n            if first == n : \n                ret.add(tuple(nums[:]))\n                \n            else : \n                for i in range(first,n):\n                    nums[i],nums[first] = nums[first],nums[i]\n                    backtrack(first+1)\n                    nums[i],nums[first] = nums[first],nums[i]\n        n = len(nums)\n        backtrack()\n        return list(ret )\n        \n        ","compare_result":"111111111111111111111111111111","title_slug":"permutations-ii"}