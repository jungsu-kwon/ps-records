{"id":404285236,"lang":"cpp","time":"10Â months","timestamp":1601795384,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/404285236/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"26.1 MB","code":"class Solution {\nprivate : \n\tTreeNode* helper(vector<int> &nums,int left, int right){\n\t\tif (left > right) return nullptr;\n\t\tif (left == right) return new TreeNode(nums[left]);\n\n\t\tint rootInd = (left + right) / 2; \n\t\tauto root = new TreeNode(nums[rootInd]);\n\n\t\tauto leftTree = helper(nums,left,rootInd -1);\n\t\tauto rightTree = helper(nums,rootInd + 1, right);\n\n\t\troot->left = leftTree;\n\t\troot->right =rightTree;\n\n\t\treturn root;\n\n\t}\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n\t\treturn helper(nums,0,nums.size()-1);\n    }\n};\n","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}