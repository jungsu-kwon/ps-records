{"id":529911753,"lang":"python3","time":"5 days, 6 hours","timestamp":1627524610,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/529911753/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"15.6 MB","code":"class Solution:\n    def sortedArrayToBST(self, nums: List[int]) -> TreeNode:        \n        def helper(left, right):\n            if left > right:\n                return None\n\n            # always choose left middle node as a root\n            p = (left + right) // 2\n\n            # preorder traversal: node -> left -> right\n            root = TreeNode(nums[p])\n            root.left = helper(left, p - 1)\n            root.right = helper(p + 1, right)\n            return root\n        \n        return helper(0, len(nums) - 1)","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}