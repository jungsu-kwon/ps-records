{"id":510502979,"lang":"python3","time":"1 month, 2 weeks","timestamp":1624170756,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/510502979/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"20.4 MB","code":"import bisect\nclass Solution:        \n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n\n        # set basic things\n        num_rows = len(matrix)\n        num_cols = len(matrix[0]) if matrix else 0\n        if not num_rows or not num_cols:\n            return False\n\n        end = num_cols\n        for row in matrix:\n            end = bisect.bisect_left(row,target)\n            if end != num_cols and row[end] == target:\n                return True\n\n        return False\n                \n            \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii"}