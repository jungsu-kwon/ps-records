{"id":519174518,"lang":"python3","time":"3Â weeks, 5Â days","timestamp":1625730512,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/519174518/","is_pending":"Not Pending","title":"Permutations","memory":"14.5 MB","code":"from typing import List\nclass Solution:\n    def helper(self,nums:List[int]) -> List[List[int]]:\n        if not nums:\n            return [[]]\n\n        ans = []\n        for i,num in enumerate(nums):\n            perms = self.helper(nums[:i]+nums[i+1:])\n            for perm in perms:\n                ans.append([num] + perm)\n\n        return ans\n\n\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        if not nums:\n            return []\n        return self.helper(nums)","compare_result":"11111111111111111111111111","title_slug":"permutations"}