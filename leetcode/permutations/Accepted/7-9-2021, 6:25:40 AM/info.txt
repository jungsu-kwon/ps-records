{"id":519484654,"lang":"python3","time":"3Â weeks, 4Â days","timestamp":1625779540,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/519484654/","is_pending":"Not Pending","title":"Permutations","memory":"14.2 MB","code":"from typing import List\nclass Solution:\n    def helper(self,nums:List[int],first=0) -> List[List[int]]:\n        if first == len(nums):\n            self.ans.append(list(nums))\n            return\n\n        for i in range(first,len(nums)):\n            nums[first],nums[i] = nums[i],nums[first]\n            self.helper(nums,first=first+1)\n\n            nums[first],nums[i] = nums[i],nums[first]\n\n\n\n\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        if not nums:\n            return []\n        self.ans = []\n        self.helper(nums)\n        return self.ans\n        ","compare_result":"11111111111111111111111111","title_slug":"permutations"}