{"id":519176026,"lang":"python3","time":"3 weeks, 5 days","timestamp":1625730734,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/519176026/","is_pending":"Not Pending","title":"Permutations","memory":"14.4 MB","code":"class Solution:\n    def permute(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[List[int]]\n        \"\"\"\n        def backtrack(first = 0):\n            # if all integers are used up\n            if first == n:  \n                output.append(nums[:])\n            for i in range(first, n):\n                # place i-th integer first \n                # in the current permutation\n                nums[first], nums[i] = nums[i], nums[first]\n                # use next integers to complete the permutations\n                backtrack(first + 1)\n                # backtrack\n                nums[first], nums[i] = nums[i], nums[first]\n        \n        n = len(nums)\n        output = []\n        backtrack()\n        return output","compare_result":"11111111111111111111111111","title_slug":"permutations"}