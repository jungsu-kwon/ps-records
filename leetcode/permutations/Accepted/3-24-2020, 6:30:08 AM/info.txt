{"id":315301674,"lang":"python3","time":"1Â year, 4Â months","timestamp":1584999008,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/315301674/","is_pending":"Not Pending","title":"Permutations","memory":"13.2 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        output = [] \n        def backtrack(first=0):\n            if first == n:\n                output.append(nums[:])\n            else : \n                for i in range(first,n):\n                    nums[i],nums[first] = nums[first],nums[i]\n                    backtrack(first+1)\n                    nums[i],nums[first]=nums[first],nums[i]\n        n = len(nums)\n        output = []\n        backtrack()\n        return output","compare_result":"1111111111111111111111111","title_slug":"permutations"}