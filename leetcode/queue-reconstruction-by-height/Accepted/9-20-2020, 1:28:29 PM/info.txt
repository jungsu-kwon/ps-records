{"id":398162868,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1600576109,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/398162868/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"12.6 MB","code":"#include <vector>\n#include <algorithm>\n#include <iostream>\n\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {\n\t\tauto numPersons = people.size();\n\t\tif (numPersons == 0 ) return std::vector<std::vector<int>>{};\n\t\tstd::vector<std::vector<int>> queue(numPersons,std::vector<int>{-1,-1});\n\n\t\tstd::sort(people.begin(),people.end(),[](std::vector<int> &v1,std::vector<int> &v2){return v1[0] < v2[0];});\n\n\t\tfor (auto person : people){\n\t\t\tauto frontCount = 0;\n\t\t\tauto targetCount = person[1];\n\t\t\tauto ind = 0 ;\n            \n\t\t\twhile (frontCount != targetCount )\n\t\t\t{\n\t\t\t\tif (queue[ind][0] == -1 || queue[ind][0] == person[0]){\n\t\t\t\t\t++frontCount;\n\t\t\t\t}\n\t\t\t\t++ind;\n\t\t\t}\n            while (queue[ind][0] != -1)\n                ++ind;\n\t\t\tqueue[ind] = person;\n\t\t}\n\t\treturn queue;\n        \n    }\n};\n","compare_result":"1111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height"}