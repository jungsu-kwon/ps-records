{"id":394831871,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1599957516,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/394831871/","is_pending":"Not Pending","title":"Unique Binary Search Trees","memory":"6 MB","code":"\nclass Solution {\npublic:\n\tint helper(int numNodes,std::vector<int> &vecDp)\n\t{\n\t\tif (vecDp[numNodes] != -1)\n\t\t\treturn vecDp[numNodes] ;\n\t\tint curTrees = 0;\n\t\tfor (auto numLeft = 0 ; numLeft < numNodes; ++numLeft){\n\t\t\tauto numRight = numNodes - numLeft - 1 ;\n\t\t\tcurTrees += helper(numLeft,vecDp) * helper(numRight,vecDp);\n\t\t}\n\n\t\treturn curTrees;\n\t}\n\tint numTrees(int n) {\n\t\tstd::vector<int> vecDp(n+1,-1);\n\t\tvecDp.front() = 1;\n\t\tfor (auto t = 1 ; t <= n ; ++t){\n\t\t\tvecDp[t] = helper(t, vecDp);\n\t\t}\n\t\treturn vecDp.back();\n\t}\n};\n","compare_result":"1111111111111111111","title_slug":"unique-binary-search-trees"}