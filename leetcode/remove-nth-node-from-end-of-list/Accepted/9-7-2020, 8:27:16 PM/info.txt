{"id":392263724,"lang":"cpp","time":"10 months, 4 weeks","timestamp":1599478036,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/392263724/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"11.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        std::stack<ListNode*> stackNode;\n        ListNode* curNode = head ;\n        while (curNode != nullptr){\n\t\t\tstackNode.push(curNode);\n\t\t\tcurNode = curNode->next;\n\t\t}\n\t\tListNode *nextNode=nullptr;\n\t\tfor (auto t = 0 ; t < n-1; ++t){\n\t\t\tnextNode = stackNode.top();\n\t\t\tstackNode.pop();\n\t\t}\n\t\tstackNode.pop();\n        if (stackNode.size() == 0 )\n            return head->next;\n\t\tauto prevNode = stackNode.top();\n\t\tprevNode->next = nextNode;\n\t\treturn head;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list"}