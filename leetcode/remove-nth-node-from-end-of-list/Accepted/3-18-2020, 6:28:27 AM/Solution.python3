// https://leetcode.com/problems/remove-nth-node-from-end-of-list

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        from collections import deque
        if head == None : 
            return head
        cur = head
        stack = deque()
        while cur : 
            stack.append(cur)
            cur = cur.next
            if len(stack) > n+1 : 
                stack.popleft()
                
        left_exists = len(stack) == n+1
        if not left_exists :
            head = stack.popleft().next
        else : 
            left = stack.popleft()
            middle = left.next
            left.next  = middle.next
        return head
        
                
        