{"id":528885090,"lang":"python3","time":"1Â week","timestamp":1627355788,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/528885090/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"14.6 MB","code":"from typing import List\n\nclass Solution:\n    def possible(self,\n        nums: List[int],\n        numSplits: int,\n        targetSum: int) -> bool:\n\n        finishedSplits: int = 0\n        curSum: int = 0\n\n        for num in nums + [0]:\n            if num > targetSum:\n                return False\n\n            if curSum + num <= targetSum:\n                curSum += num\n            else:\n                curSum = num\n                finishedSplits += 1\n\n        return finishedSplits <= numSplits - 1\n\n    def splitArray(self, nums: List[int], m: int) -> int:\n        left: int = 0\n        right: int = sum(nums)\n\n        while left < right:\n            mid: int = (left + right) // 2\n\n            if self.possible(nums,m,mid):\n                right = mid\n            else:\n                left = mid + 1\n        return left","compare_result":"111111111111111111111111111111","title_slug":"split-array-largest-sum"}