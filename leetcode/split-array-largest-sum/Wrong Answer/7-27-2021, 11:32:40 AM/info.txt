{"id":528869250,"lang":"python3","time":"1Â week","timestamp":1627353160,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/528869250/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"N/A","code":"from typing import List\n\nclass Solution:\n    def increasing(self,nums: List[int],totalSum: int, index: int) -> int:\n        if index == len(nums) - 1: return True\n        leftSum:int = sum(nums[:index+1])\n        curSum: int = max(totalSum - leftSum, leftSum)\n\n        nextSum: int = leftSum + nums[index+1]\n        nextSum: int = max(nextSum, totalSum - nextSum)\n\n        return curSum <= nextSum\n\n\n\n\n\n\n\n\n\n\n    def splitArray(self, nums: List[int], m: int) -> int:\n        left: int = 0\n        right: int = len(nums) - 1\n        totalSum: int = sum(nums)\n\n        while left < right:\n            mid: int = (left + right) // 2\n\n            if self.increasing(nums,totalSum,mid):\n                right = mid\n            else:\n                left = mid +1\n        \n        leftSum: int = sum(nums[:left+1])\n        return max(totalSum - leftSum, leftSum)\n\n\n\n\n\n","compare_result":"110000100010011000101000000110","title_slug":"split-array-largest-sum"}