{"id":399615675,"lang":"cpp","time":"10 months, 1 week","timestamp":1600853095,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/399615675/","is_pending":"Not Pending","title":"Task Scheduler","memory":"N/A","code":"#include <vector>\n#include <unordered_map>\n#include <iostream>\nusing namespace std;\nclass Solution {\npublic:\n    int leastInterval(vector<char>& tasks, int n) {\n\t\tauto numAlphabet = 'Z' - 'A' + 1 ;\n\t\tstd::vector<int> counter(numAlphabet,0);\n\t\tauto maxCount = 0;\n\t\tauto numMaxTasks = 0;\n\n\t\tfor (auto task : tasks){\n\t\t\tcounter[task-'A'] += 1 ;\n\t\t\tif (counter[task-'A'] >  maxCount){\n\t\t\t\tnumMaxTasks = 1;\n\t\t\t\tmaxCount = counter[task-'A'];\n\t\t\t}\n\t\t\telse if (counter[task-'A'] == maxCount)\n\t\t\t\tnumMaxTasks += 1 ;\n\t\t}\n\n\t\tauto nonBottleNeck = tasks.size() - maxCount;\n\t\tauto initIdle = n * (maxCount-1);\n\n\t\tif (initIdle < nonBottleNeck)\n\t\t\treturn tasks.size();\n\t\treturn (maxCount-1) * (n+1) + numMaxTasks;\n\t\t\n    }\n};\n\n\n","compare_result":"11111111111111111111110111111111111111111111111111111111111111111111111","title_slug":"task-scheduler"}