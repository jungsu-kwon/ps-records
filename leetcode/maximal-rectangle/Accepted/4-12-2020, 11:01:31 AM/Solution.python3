// https://leetcode.com/problems/maximal-rectangle

class Solution:
    def max_area(self,heights):
        n = len(heights)
        stack = [-1]
        maxi = 0 
        for i in range(n):
            if i > 0 and heights[i-1] > heights[i] : 
                len_stack = len(stack)
                for j in range(1,len_stack):
                    top = stack[-1]
                    if heights[top] > heights[i] : 
                        top = stack.pop(-1)
                        maxi = max(maxi,(i-stack[-1]-1)*heights[top])
                    else : 
                       break
            stack.append(i)
        len_stack = len(stack)
        for i in range(len_stack-1):
            top = stack.pop(-1)
            maxi = max(maxi,(n-stack[-1]-1)*heights[top])
        return maxi
    
    def maximalRectangle(self, matrix):
        rows = len(matrix)
        if rows == 0 :
            return 0 
        cols = len(matrix[0])
        if cols == 0 :
            return 0 
        dp=  [0 for i in range(cols)]
        maxi = 0 
        for i in range(rows):
            dp = [dp[j] + 1 if matrix[i][j] == '1' else 0 for j in range(cols)  ]
            maxi = max(maxi,self.max_area(dp))
        return maxi
