{"id":529468023,"lang":"python3","time":"6 days, 3 hours","timestamp":1627449356,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/529468023/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n        if not root: return None\n\n        curNode: TreeNode = root\n        while curNode:\n            if curNode.val == val:\n                return curNode\n            elif curNode.val < val:\n                curNode = curNode.right\n            else:\n                curNode = curNode.left\n        return None","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}