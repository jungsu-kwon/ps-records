{"id":315914734,"lang":"python3","time":"1 year, 4 months","timestamp":1585170557,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/315914734/","is_pending":"Not Pending","title":"Edit Distance","memory":"12.9 MB","code":"class Solution():\n    def minDistance(self,word1,word2):\n        rows,cols = len(word1),len(word2)\n        if rows == 0 or cols == 0 :\n            return max(rows,cols)\n        dp = [i for i in range(cols+1)]\n        for i in range(1,rows+1):\n            temp = dp[0]\n            dp[0] = i\n            prev = temp\n            for j in range(1,cols+1):\n                is_diff = int(word1[i-1]!=word2[j-1])\n                temp = dp[j]\n                dp[j] = min(prev+is_diff,dp[j-1]+1,dp[j]+1)\n                prev = temp\n        return dp[-1]\n                \n\n","compare_resulttitle_slug":"edit-distance"}