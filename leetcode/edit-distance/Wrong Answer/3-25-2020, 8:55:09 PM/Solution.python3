// https://leetcode.com/problems/edit-distance

class Solution():
    def minDistance(self,word1,word2):
        rows,cols = len(word1),len(word2)
        if rows == 0 or cols == 0 :
            return max(rows,cols)
        dp = [0 for i in range(cols)]
        for i in range(rows-1,-1,-1):
            if i == rows-1:
                for j in range(cols-1,-1,-1):
                    if j == cols-1:
                        dp[j] = int(word1[i] != word2[j])
                    else : 
                        dp[j] = dp[j+1] +int(word1[i] != word2[j])
            else : 
                for j in range(cols-1,-1,-1):
                    is_diff = int(word1[i] != word2[j])
                    temp = dp[j]
                    if j == cols-1 : 
                        dp[j] +=  is_diff
                    else : 
                        dp[j] = min(prev+is_diff,dp[j]+is_diff,dp[j+1]+is_diff) 
                    prev = temp
        return dp[0]