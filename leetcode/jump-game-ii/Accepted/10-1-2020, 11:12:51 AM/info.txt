{"id":402915823,"lang":"cpp","time":"10Â months","timestamp":1601518371,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/402915823/","is_pending":"Not Pending","title":"Jump Game II","memory":"13.5 MB","code":"#include <vector>\n#include <iostream>\n\nusing namespace std;\nclass Solution {\npublic:\n    int jump(vector<int>& nums) {\n\t\tif (nums.size() == 0 ) return 0;\n\t\tint numJumps = 0;\n\t\tint start = 0 ;\n\t\tint end = 1;\n\n\t\twhile (start < nums.size() && end  <= nums.size()-1)\n\t\t{\n\t\t\tint canReach = 0;\n\t\t\tfor (int t = start; t < end; ++t){\n\t\t\t\tcanReach = std::max(canReach,t+nums[t]);\n\t\t\t}\n\t\t\tnumJumps += 1;\n\t\t\tif (canReach >= nums.size()-1) return numJumps;\n\t\t\tstart = end ;\n\t\t\tend = canReach+1;\n\t\t}\n\t\treturn 0;\n        \n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-ii"}