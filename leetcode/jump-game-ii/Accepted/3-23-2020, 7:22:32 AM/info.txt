{"id":314991725,"lang":"python3","time":"1Â year, 4Â months","timestamp":1584915752,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/314991725/","is_pending":"Not Pending","title":"Jump Game II","memory":"15 MB","code":"class Solution:\n    def jump(self, nums: List[int]) -> int:\n        n = len(nums)\n        if n < 2:\n            return 0 \n        \n        # max position one could reach \n        # starting from index <= i \n        max_pos = nums[0]\n        # max number of steps one could do\n        # inside this jump\n        max_steps = nums[0]\n        \n        jumps = 1\n        for i in range(1, n):\n            # if to reach this point \n            # one needs one more jump\n            if max_steps < i:\n                jumps += 1\n                max_steps = max_pos\n            max_pos = max(max_pos, nums[i] + i)\n                \n        return jumps","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-ii"}