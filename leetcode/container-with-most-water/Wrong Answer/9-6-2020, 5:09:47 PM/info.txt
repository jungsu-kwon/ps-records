{"id":391751477,"lang":"cpp","time":"11Â months","timestamp":1599379787,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/391751477/","is_pending":"Not Pending","title":"Container With Most Water","memory":"N/A","code":"class Solution {\nprivate : \n    int searchNext(std::vector<int> &height,int startInd,bool fromLeft){\n        int nextInd = 0 ;\n        if (fromLeft){\n            auto itFound = std::upper_bound(height.begin() + startInd,height.end(),height[startInd]);\n            if (itFound == height.end()){\n                return -1;\n            }\n            nextInd = itFound - height.begin();\n        }\n        else{\n            auto itFound = height.rbegin() + height.size() -1 - startInd;\n            for (;itFound != height.rend(); ++itFound ){\n                if (*itFound > height[startInd])\n                    break;\n            }\n            if (itFound == height.rend())\n                return -1;\n            nextInd = height.size() - 1 - (itFound - height.rbegin());\n        }\n        return nextInd ;\n\n    }\npublic:\n    int maxArea(vector<int>& height) {\n        int maxArea = 0 ;\n        int l = 0, r = height.size()-1;\n        int maxVolume =(r-l) * std::min(height[r],height[l]);\n        while (l < r){\n            if (height[l] < height[r])\n            {\n                l = searchNext(height,l,true);\n                if (l == -1)\n                    break;\n                else \n                    maxVolume = std::max(maxVolume,(r-l) * std::min(height[r],height[l]));\n            }\n            else\n            {\n                r = searchNext(height,r,false);\n                if (r == -1)\n                    break;\n                else\n                    maxVolume = std::max(maxVolume,(r-l) * std::min(height[r],height[l]));\n            }\n        }\n        return maxVolume;\n    }\n};","compare_result":"11111111111111011000111110000101000000000000000011","title_slug":"container-with-most-water"}