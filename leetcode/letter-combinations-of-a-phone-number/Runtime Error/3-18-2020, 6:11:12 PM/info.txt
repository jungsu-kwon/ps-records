{"id":313559900,"lang":"python3","time":"1Â year, 4Â months","timestamp":1584522672,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/313559900/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution(object):\n    def letterCombinations(self,digits):\n        digit_list = list(map(int,list(digits)))\n        str_list = self._convertDig2Str(digit_list)\n        \n        temp_result = str_list\n        while len(temp_result) != 1:\n            temp_result = self._addTwoList(temp_result)\n            \n        result = temp_result\n        return result[0]\n        \n    def _convertDig2Str(self,digit_list):\n        \n        ## (2 : a,b,c) (3 : d,e,f) (4 : g,h,i) (5 : j,k,l) (6 : m,n,o) (7 : p,q,r) (8 : s,t,u) (9 : w,x,y,z)\n        num_str_Dict = {2:[\"a\",\"b\",\"c\"], 3:[\"d\",\"e\",\"f\"], 4:[\"g\",\"h\",\"i\"], \n                        5:[\"j\",\"k\",\"l\"], 6:[\"m\",\"n\",\"o\"], 7:[\"p\",\"q\",\"r\",\"s\"],\n                        8:[\"t\",\"u\",\"v\"], 9:[\"w\",\"x\",\"y\",\"z\"]}\n        result = []        \n        for digit in digit_list:\n            result.append(num_str_Dict[digit])        \n        return result\n        \n        \n    def _addTwoList(self,str_list):\n        Front_list = str_list[0]\n        Back_list = str_list[1]\n\n        comb = []\n        for front in Front_list:\n            for back in Back_list:\n                comb.append(front+back)\n\n        if len(str_list) > 2:\n            result = [comb]+str_list[2:]\n        else:\n            result = [comb]\n        return result","compare_result":"1000000000000000000000000","title_slug":"letter-combinations-of-a-phone-number"}