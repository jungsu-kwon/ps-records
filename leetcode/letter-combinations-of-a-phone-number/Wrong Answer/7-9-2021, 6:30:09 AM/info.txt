{"id":519486033,"lang":"python3","time":"3 weeks, 4 days","timestamp":1625779809,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/519486033/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"from typing import List\nclass Solution:\n    def init(self):\n        self.mapping = {}\n        self.mapping[\"2\"] = \"abc\"\n        self.mapping[\"3\"] = \"def\"\n        self.mapping[\"4\"] = \"ghi\"\n        self.mapping[\"5\"] = \"jkl\"\n        self.mapping[\"6\"] = \"mno\"\n        self.mapping[\"7\"] = \"pqrs\"\n        self.mapping[\"8\"] = \"tuv\"\n        self.mapping[\"9\"] = \"wxyz\"\n\n    def helper(self,digits,first=0) -> List[str]:\n        if first == len(digits):\n            return [\"\"]\n        \n        ans = []\n        for char in self.mapping[digits[first]]:\n            for combi in self.helper(digits,first=first+1):\n                ans.append(char + combi)\n        return ans\n\n    def letterCombinations(self, digits: str) -> List[str]:\n        self.init()\n        return self.helper(digits)\n        ","compare_result":"1011111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}