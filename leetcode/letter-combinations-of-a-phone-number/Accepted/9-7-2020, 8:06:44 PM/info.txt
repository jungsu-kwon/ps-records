{"id":392259010,"lang":"cpp","time":"10 months, 4 weeks","timestamp":1599476804,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/392259010/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"6.3 MB","code":"class Solution {\npublic:\n    vector<string> letterCombinations(string digits) {\n        std::vector<std::string> dict{\n            \"\",\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"}; \n\t\tauto lenAns  = 1;\n\t\tfor (auto digit : digits){\n\t\t\tlenAns *= dict[(digit-'1')].size();\n\t\t}\n        if (digits.size() == 0){\n            std::vector<std::string> vecAns;\n            return vecAns;\n        }\n\t\tstd::vector<std::string> vecAns(lenAns,\"\");\n\t\tauto period = 1 ;\n\n\t\tfor (auto digit : digits){\n\t\t\tauto ind = 0;\n\t\t\tfor (auto t = 0 ; t < lenAns;++t){\n\t\t\t\tvecAns[t] += dict[digit-'1'][ind];\n\t\t\t\tif ( (t+1) % period == 0){\n\t\t\t\t\tind += 1 ;\n\t\t\t\t\tind = ind % dict[digit-'1'].size();\n\t\t\t\t}\n\t\t\t}\n\t\t\tperiod *= dict[digit-'1'].size();\n\t\t}\n\n        return vecAns;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}