{"id":304147224,"lang":"python3","time":"1Â year, 5Â months","timestamp":1581942070,"status_display":"Accepted","runtime":"736 ms","url":"/submissions/detail/304147224/","is_pending":"Not Pending","title":"Stone Game","memory":"19 MB","code":"    \n    \nclass Solution:\n    def helper(self,start,end,sum):\n        if self.memo[start][end] != 0 :\n            return self.memo[start][end]\n        if start == end : \n            return self.piles[start]\n        \n        ret = max(sum-self.helper(start,end-1,sum-self.piles[end]),\n                  sum-self.helper(start+1,end,sum-self.piles[start]))\n        self.memo[start][end] = ret\n        return ret\n       \n        \n    \n    def stoneGame(self, piles: List[int]) -> bool:\n        self.n = len(piles)\n        self.piles = piles\n        self.memo = [[0 for i in range(self.n)] for i in range(self.n)]\n        self.sum = sum(piles)\n        \n        maxi = self.helper(0,self.n-1,self.sum)\n        print(maxi)\n        if maxi >= int(self.sum/2) : \n            return True\n        return False \n    \n        ","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"stone-game"}