{"id":297442970,"lang":"python3","time":"1 year, 6 months","timestamp":1580009356,"status_display":"Accepted","runtime":"2072 ms","url":"/submissions/detail/297442970/","is_pending":"Not Pending","title":"Open the Lock","memory":"13.8 MB","code":"class Solution:\n    def openLock(self, deadends, target ) :\n        self.queue = ['0000'] \n        self.visited = set([])\n        self.step = 0\n        \n        while True : \n            n = len(self.queue)\n            if n == 0 : \n                break\n            for i in range(n) : \n                num = self.queue.pop(0)\n                if num in self.visited or num in deadends:\n                    continue\n                if num == target : \n                    return self.step\n                for i in range(4):\n                    temp_pos = list(num)\n                    temp_neg = list(num)\n                    temp_pos[i] = str((int(temp_pos[i])+1)%10)\n                    temp_neg[i] = str((int(temp_neg[i])-1)%10)\n                    pos = ''.join(temp_pos)\n                    neg = ''.join(temp_neg)\n                    if pos not in self.visited : \n                        self.queue.append(pos)\n                    if neg not in self.visited : \n                        self.queue.append(neg)\n                self.visited.add(num)\n                    \n            self.step += 1  \n        return -1  \n        \n        \n        ","compare_result":"1111111111111111111111111111111111111111111","title_slug":"open-the-lock"}