{"id":528504532,"lang":"python3","time":"1Â week","timestamp":1627291749,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/528504532/","is_pending":"Not Pending","title":"Find K-th Smallest Pair Distance","memory":"N/A","code":"class Solution(object):\n    def smallestDistancePair(self, nums, k):\n        def possible(guess):\n            #Is there k or more pairs with distance <= guess?\n            return sum(prefix[min(x + guess, W)] - prefix[x] + multiplicity[i]\n                       for i, x in enumerate(nums)) >= k\n\n        nums.sort()\n        W = nums[-1]\n\n        #multiplicity[i] = number of nums[j] == nums[i] (j < i)\n        multiplicity = [0] * len(nums)\n        for i, x in enumerate(nums):\n            if i and x == nums[i-1]:\n                multiplicity[i] = 1 + multiplicity[i - 1]\n\n        #prefix[v] = number of values <= v\n        prefix = [0] * (W + 1)\n        left = 0\n        for i in xrange(len(prefix)):\n            while left < len(nums) and nums[left] == i:\n                left += 1\n            prefix[i] = left\n\n        lo = 0\n        hi = nums[-1] - nums[0]\n        while lo < hi:\n            mi = (lo + hi) / 2\n            if possible(mi):\n                hi = mi\n            else:\n                lo = mi + 1\n\n        return lo","compare_result":"0000000000000000000","title_slug":"find-k-th-smallest-pair-distance"}