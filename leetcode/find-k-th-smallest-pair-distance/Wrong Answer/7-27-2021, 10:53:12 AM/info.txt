{"id":528856166,"lang":"python3","time":"1Â week","timestamp":1627350792,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/528856166/","is_pending":"Not Pending","title":"Find K-th Smallest Pair Distance","memory":"N/A","code":"from typing import List\n\nclass Solution:\n    def count(self, nums: List[int], distance: int) -> int:\n        start: int = 0\n        end: int = 0\n        count: int = 0\n        n: int = len(nums)\n\n        while start < n or end < n:\n            while end < n and nums[end] - nums[start] <= distance:\n                end += 1\n            if end < n: count += end - start - 1\n            start += 1\n            \n\n        return count\n\n\n    def smallestDistancePair(self, nums: List[int], k: int) -> int:\n        nums.sort()\n        # print(nums)\n\n        left: int = 0\n        right: int = nums[-1] - nums[0]\n        k -= 1\n\n        while left < right:\n            mid: int = (left + right) // 2\n            count: int = self.count(nums,mid)\n\n            if count >= k:\n                right = mid\n            else:\n                left = mid + 1\n            # print(left,right,count)\n        return left","compare_result":"1111100100000000000","title_slug":"find-k-th-smallest-pair-distance"}