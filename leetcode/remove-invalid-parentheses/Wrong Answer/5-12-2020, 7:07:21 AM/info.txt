{"id":337986011,"lang":"python3","time":"1 year, 2 months","timestamp":1589234841,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/337986011/","is_pending":"Not Pending","title":"Remove Invalid Parentheses","memory":"N/A","code":"class Solution:\n    def merge(self,l1,l2):\n        ret = [] \n        if len(l1) == 0 : \n            return l2\n        else : \n            n1,n2 = len(l1),len(l2)\n            for s1 in l1 : \n                for s2 in l2 : \n                    ret.append(s1+s2)\n        return ret\n    def pop_char(self,s,to_pop):\n        cands = []\n        for i,char in enumerate(s):\n            if char == to_pop : \n                cand = s[:i] if i == len(s) -1 else s[:i] + s[i+1:]\n                cands.append(cand)\n        return list(set(cands))\n    def removeInvalidParentheses(self, s):\n        ret,count,start,last_zero = [\"\"],0,0,0\n        for i,char in enumerate(s) : \n            if char == '(' : \n                count += 1 \n            elif char == ')' : \n                count -= 1 \n\n            if count < 0 : \n                to_fix = s[start:i+1]\n                cands = self.pop_char(to_fix,')')\n                ret = self.merge(ret,cands)\n                count += 1\n                start,last_zero = i + 1 ,i+1\n            if count == 0 :\n                last_zero = i+1\n        if count == 0 : \n            cands = [s[last_zero:]]\n            ret = self.merge(ret,cands)\n        elif count > 0 : \n            cands = [s[start:last_zero]]\n            ret = self.merge(ret,cands)\n        return ret\n\n        \n\n        \n\n","compare_result":"001110111010011100001100110011101000000010100001110001100000000001101010000000000001000000000001001100000000000000000000000001","title_slug":"remove-invalid-parentheses"}