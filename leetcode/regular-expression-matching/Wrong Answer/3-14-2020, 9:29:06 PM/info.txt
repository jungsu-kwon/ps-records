{"id":312316856,"lang":"python3","time":"1 year, 4 months","timestamp":1584188946,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/312316856/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"N/A","code":"class Solution:\n    def isMatch(self, s,p):\n        if len(p) == 0 : \n            if len(s) != 0 : \n                return False\n        \n        s_count = []\n        p_count = []\n        for i,char in enumerate(s) : \n            if i == 0 : \n                s_count.append([char,1])\n                prev = char\n            else :\n                if char == prev : \n                    s_count[-1][1] += 1 \n                else : \n                    s_count.append([char,1])\n                    prev = char\n        prev = None \n        for i,char in enumerate(p) : \n            if char == '*' : \n                if prev == None : \n                    return False\n                else : \n                    p_count[-1][1] = -1 \n            elif char == '.' : \n                p_count.append(['.',1])\n                prev = '.'\n            else : \n                if prev == char : \n                    if not p_count[-1][1] == -1 : \n                        p_count[-1][1] += 1 \n                else : \n                    p_count.append([char,1])\n                    prev = char\n        ind1 = 0\n        ind2 = 0 \n        n1,n2 = len(s_count),len(p_count)\n        while True  : \n            s_char,s_freq = s_count[ind1]\n            p_char,p_freq = p_count[ind2]\n\n            if s_char == p_char : \n                if p_freq == -1 : \n                    ind1 += 1 \n                    ind2 += 1\n                elif s_freq > p_freq :\n                    s_count[ind1][1] -= p_freq\n                    ind2 +=1 \n                elif s_freq == p_freq : \n                    ind1 += 1 \n                    ind2 +=1 \n                if s_freq < p_freq : \n                    return False\n\n            elif p_char == '.' : \n                s_count[ind1][1] -= p_freq\n                ind2 += 1 \n                if s_count[ind1][1] == 0 :\n                    ind1 += 1 \n            elif p_freq == -1 : \n                ind2 +=1 \n            else : \n                return False\n\n\n            if ind1 == n1 and ind2 == n2 : \n                return True\n            elif ind2 == n2 and ind1 < n1 : \n                return False\n            elif ind1 == n1 and ind2 <n2 : \n                for i in range(ind2,n2) : \n                    p_char,p_freq = p_count[i]\n                    if p_freq != -1 : \n                        return False\n                return True\n\n        return False\n                \n                \n\n\n\n\n\n\n","compare_result":"110111110111111111101101111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"regular-expression-matching"}