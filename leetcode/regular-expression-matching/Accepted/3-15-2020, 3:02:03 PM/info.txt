{"id":312588563,"lang":"python3","time":"1 year, 4 months","timestamp":1584252123,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/312588563/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"12.9 MB","code":"class Solution:\n    def isMatch(self,text,pattern):\n        if not pattern : \n            return not text \n        dp = [[False for i in range(len(pattern)+1)] for i in range(len(text)+1)]\n        dp[len(text)][len(pattern)] = True\n        for i in range(len(text),-1,-1):\n            for j in range(len(pattern)-1,-1,-1):\n                first_match = i < len(text) and (pattern[j] in [text[i],'.'])\n                if j+1 < len(pattern) and pattern[j+1] == '*' : \n                    dp[i][j] =  (first_match and dp[i+1][j]) or dp[i][j+2]\n                else : \n                    dp[i][j] =  first_match and dp[i+1][j+1]\n        return dp[0][0]\n\n\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regular-expression-matching"}