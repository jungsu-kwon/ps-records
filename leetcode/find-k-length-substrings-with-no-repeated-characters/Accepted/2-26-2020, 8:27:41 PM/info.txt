{"id":307062191,"lang":"python3","time":"1 year, 5 months","timestamp":1582716461,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/307062191/","is_pending":"Not Pending","title":"Find K-Length Substrings With No Repeated Characters","memory":"12.6 MB","code":"class Solution:\n    def numKLenSubstrNoRepeats(self, S, K) :\n        list_str = list(S)\n        n = len(list_str)\n        alphabets = 'abcdefghijklmnopqrstuvwxyz'\n\n        if n < K : \n            return 0\n\n        counter = {}\n        ans = 0 \n        num_alphabets = 0 \n\n        for alphabet in alphabets : \n            counter[alphabet] = 0 \n\n        for i in range(K) : \n            counter[list_str[i]] += 1 \n            if counter[list_str[i]] == 1 : \n                num_alphabets += 1 \n        if num_alphabets == K : \n            ans += 1 \n\n        for i in range(n-K): # S - 1 ~ (S-K-1)\n            counter[list_str[i]] -= 1 # n-k-2\n            if counter[list_str[i]] == 0 : \n                num_alphabets -= 1 \n\n            counter[list_str[K+i]] += 1 \n            if counter[list_str[i+K]] == 1 : # n-2\n                num_alphabets += 1 \n            if num_alphabets == K : \n                ans += 1 \n        return ans\n","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"find-k-length-substrings-with-no-repeated-characters"}