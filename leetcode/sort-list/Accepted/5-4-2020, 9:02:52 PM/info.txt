{"id":334275165,"lang":"python3","time":"1 year, 3 months","timestamp":1588593772,"status_display":"Accepted","runtime":"272 ms","url":"/submissions/detail/334275165/","is_pending":"Not Pending","title":"Sort List","memory":"23 MB","code":"class Solution:\n    def get_node(self,head,i):\n        for i in range(i-1):\n            head = head.next\n        return head\n\n    def sortList(self, head):\n        size,cur = 0,head\n\n        while cur != None :\n            size += 1\n            cur = cur.next\n\n        head = self.merge_sort(head,size)\n\n        return head\n\n    def merge_sort(self,head,size):\n        if size <= 1 :\n            return head\n        #print(head,size)\n        mid_size = size // 2\n        mid = self.get_node(head,mid_size)\n        right_head = mid.next\n        mid.next = None\n        #print(head,right_head)\n        left_head = self.merge_sort(head,mid_size)\n        right_head = self.merge_sort(right_head,size-mid_size)\n\n        head = self.merge(left_head,right_head)\n        return head\n\n    def merge(self,lh,rh):\n        head = ListNode(val=-1)\n        cur = head\n        while lh != None and rh != None :\n            if lh.val <= rh.val :\n                cur.next = lh\n                lh,cur  = lh.next,cur.next\n                cur.next = None\n            else :\n                cur.next =  rh\n                rh,cur = rh.next,cur.next\n                cur.next = None\n        cur.next = rh if lh == None else lh\n        return head.next\n        ","compare_result":"1111111111111111","title_slug":"sort-list"}