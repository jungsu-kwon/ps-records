{"id":495555691,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621470470,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/495555691/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.5 MB","code":"#include <vector>\nusing namespace std;\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    void helper(TreeNode* root, vector<int> &ans)\n    {\n        if (!root) return;\n        ans.push_back(root->val);\n        helper(root->left,ans);\n        helper(root->right,ans);\n    }\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        helper(root,ans);\n        return ans;\n\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}