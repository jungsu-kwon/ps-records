{"id":305634583,"lang":"python3","time":"1 year, 5 months","timestamp":1582345992,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/305634583/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"12.7 MB","code":"# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n        \n        \nclass Solution:\n    def preorderTraversal(self, root: TreeNode) -> List[int]:\n        ret_list = []\n        if root == None : \n            return ret_list\n        \n        stack = []\n        cur = root\n        ret_list.append(cur.val)\n\n        while True :\n            if cur.left == None and cur.right == None : \n                if len(stack) == 0 : \n                    return ret_list\n                else :\n                    cur = stack.pop().right\n                    ret_list.append(cur.val)\n                    \n            else : \n                if cur.left != None :\n                    if cur.right != None : \n                        stack.append(cur)\n                        \n                    cur = cur.left\n                    ret_list.append(cur.val)\n                        \n                else : \n                    cur = cur.right\n                    ret_list.append(cur.val)\n                    \n                        \n                    \n                        \n                        \n                        \n\n\n                    \n                    \n\n                \n                \n\n                \n\n            \n            \n            \n                \n\n        \n\n\n\n            \n\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}