// https://leetcode.com/problems/binary-tree-preorder-traversal

# Definition for a binary tree node.
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None
        
        
class Solution:
    def preorderTraversal(self, root: TreeNode) -> List[int]:
        ret_list = []
        if root == None : 
            return ret_list
        
        stack = []
        cur = root
        ret_list.append(cur.val)

        while True :
            if cur.left == None and cur.right == None : 
                if len(stack) == 0 : 
                    return ret_list
                else :
                    cur = stack.pop().right
                    ret_list.append(cur.val)
                    
            else : 
                if cur.left != None :
                    if cur.right != None : 
                        stack.append(cur)
                        
                    cur = cur.left
                    ret_list.append(cur.val)
                        
                else : 
                    cur = cur.right
                    ret_list.append(cur.val)
                    
                        
                    
                        
                        
                        


                    
                    

                
                

                

            
            
            
                

        



            

        