{"id":392023582,"lang":"cpp","time":"11Â months","timestamp":1599432270,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/392023582/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> threeSum(vector<int>& nums) {\n\t\tstd::sort(nums.begin(),nums.end());\n\t\tstd::vector<std::vector<int>> vecAns;\n\t\tfor (auto t = 0 ; t < nums.size();++t){\n\t\t\tif (t > 0 && nums[t] == nums[t-1]) continue;\n\n\t\t\tstd::unordered_set<int> hash;\n\t\t\tfor (auto s = t+1; s < nums.size();++s){\n\t\t\t\tauto target = -nums[t] - nums[s];\n\t\t\t\tauto itFound = hash.find(target);\n\t\t\t\tif (itFound != hash.end()){\n\t\t\t\t\tstd::vector<int> vecTriplet{nums[t],nums[s],-nums[s]-nums[t]};\n\t\t\t\t\tvecAns.push_back(vecTriplet);\n\t\t\t\t}\n\t\t\t\thash.insert(nums[s]);\n\t\t\t}\n\t\t}\n\t\treturn vecAns;\n    }\n};\n","compare_result":"111111111111111110111111101111001110011101011110000101100000010000011100100011001110100110100110011010110100011000100001111110000100000000000001000000000101000100000000000100010100000000000110000000000001010000010000101110100000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"3sum"}