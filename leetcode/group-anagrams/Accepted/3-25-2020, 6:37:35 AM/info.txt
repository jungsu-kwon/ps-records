{"id":315606283,"lang":"python3","time":"1 year, 4 months","timestamp":1585085855,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/315606283/","is_pending":"Not Pending","title":"Group Anagrams","memory":"17.7 MB","code":"class Solution():                \n        \n    def groupAnagrams(self,strs):\n        self.alphabets = 'abcdefghijklmnopqrstuvwxyz'\n        #assert len(self.alphabets) == 26\n        self.inds = {}\n        self.groups = {}\n        for i,alpha in enumerate(self.alphabets) : \n            self.inds[alpha] = i \n        for str_ in strs : \n            n = len(str_)\n            key = [0 for i in range(len(self.alphabets))]\n            for char in str_ : \n                key[self.inds[char]] += 1 \n            key_tuple = tuple(key)\n            if key_tuple in self.groups.keys():\n                self.groups[key_tuple].append(str_)\n            else : \n                self.groups[key_tuple] = [str_]\n        ret = []\n        for key in self.groups.keys():\n            ret.append(self.groups[key])\n        return ret\n            \n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}