{"id":402411904,"lang":"cpp","time":"10 months, 1 week","timestamp":1601415816,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/402411904/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"11.1 MB","code":"#include <vector>\n#include <unordered_set>\n#include <iostream>\nusing namespace std;\n\nclass Solution {\npublic:\n    int longestConsecutive(vector<int>& nums) {\n\t\tstd::unordered_set<int> setNums;\n\t\tfor (auto num : nums){\n\t\t\tsetNums.insert(num);\n\t\t}\n\t\tint nLongestLen = 0;\n\n\t\tfor (auto num : nums){\n\t\t\tif (setNums.find(num) != setNums.end())\n\t\t\t{\n\t\t\t\tint curLen = 1;\n\n\t\t\t\tint nLower = num - 1 ; \n\t\t\t\twhile (setNums.find(nLower) != setNums.end()){\n\t\t\t\t\tsetNums.erase(nLower);\n\t\t\t\t\tcurLen += 1 ;\n\t\t\t\t\tnLower -= 1;\n\t\t\t\t}\n\n\t\t\t\tint nHigher = num + 1 ;\n\t\t\t\twhile (setNums.find(nHigher) != setNums.end()){\n\t\t\t\t\tsetNums.erase(nHigher);\n\t\t\t\t\tcurLen += 1 ;\n\t\t\t\t\tnHigher += 1 ;\n\t\t\t\t}\n\t\t\t\tnLongestLen = std::max(nLongestLen,curLen);\n\t\t\t}\n\t\t}\n\t\treturn nLongestLen;\n        \n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}