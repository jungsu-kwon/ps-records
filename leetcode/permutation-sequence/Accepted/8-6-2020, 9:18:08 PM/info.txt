{"id":376951736,"lang":"python3","time":"12Â months","timestamp":1596716288,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/376951736/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"13.9 MB","code":"class Solution:\n    def factorial(self,n):\n        res = 1\n        for i in range(n):\n            res *= (i+1)\n        return res\n\n    def getPermutation(self,n,k):\n        self.ans = [] \n        nums = [str(i+1) for i in range(n)]\n        self.helper(nums,k-1)\n        return ''.join(self.ans)\n\n    def helper(self,nums,k):\n        if not nums : \n            return \n        fac = self.factorial(len(nums)-1)\n        ind = k // fac\n        self.ans.append(nums.pop(ind))\n        self.helper(nums,k % fac)\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence"}