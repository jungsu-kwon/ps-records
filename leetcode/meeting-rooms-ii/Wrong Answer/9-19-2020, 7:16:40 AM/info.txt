{"id":397622732,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1600467400,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/397622732/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"#include <iostream>\n#include <vector>\n#include <queue>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int minMeetingRooms(vector<vector<int>>& intervals) {\n\t\tauto n = intervals.size();\n\t\tif (n == 0){\n\t\t\treturn 0 ;\n\t\t}\n\t\tstd::priority_queue<int,std::vector<int>,std::greater<int>> minQueue;\n\t\tstd::sort(intervals.begin(),intervals.end(),[](const std::vector<int> &v1, \n\t\t\t\t\t\t\t\t\t\t\t\t\t   const std::vector<int> &v2) { return v1[0] < v2[0];});\n\n\t\tint minRooms = 0;\n\t\tfor (auto interval : intervals){\n\t\t\tauto start = interval[0];\n\t\t\tauto end = interval[1];\n\t\t\twhile (minQueue.size() != 0 && minQueue.top() < start){\n\t\t\t\tminQueue.pop();\n\t\t\t}\n\n\t\t\tbool roomAvailable  =  bool(minRooms - minQueue.size()) ;\n\t\t\tminQueue.push(end);\n\t\t\tif (!roomAvailable){\n\t\t\t\t++minRooms;\n\t\t\t}\n\t\t}\n\t\treturn minRooms;\n\n        \n    }\n};\n","compare_result":"111111111111000111111111110111011110111110101110101011111111111111111111111110","title_slug":"meeting-rooms-ii"}