{"id":369149424,"lang":"python3","time":"1Â year","timestamp":1595246198,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/369149424/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"17 MB","code":"class Solution:\n    def minMeetingRooms(self, intervals):\n        import bisect\n        intervals = sorted(intervals,key=lambda x : x[0])\n        ends = []\n        reserved = 0\n\n        for interval in intervals : \n            start,end = interval\n            while ends and start >= ends[0] : \n                ends.pop(0)\n            available = reserved - len(ends)\n            if available == 0 : \n                reserved += 1 \n            bisect.insort_left(ends,end)\n        return reserved","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii"}