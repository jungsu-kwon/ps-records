{"id":432272019,"lang":"python3","time":"7 months, 2 weeks","timestamp":1608386168,"status_display":"Accepted","runtime":"760 ms","url":"/submissions/detail/432272019/","is_pending":"Not Pending","title":"Cherry Pickup II","memory":"31.2 MB","code":"class Solution:\n    def cherryPickup(self, grid: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n\n        @lru_cache(None)\n        def dp(row, col1, col2):\n            if col1 < 0 or col1 >= n or col2 < 0 or col2 >= n:\n                return -inf\n            # current cell\n            result = 0\n            result += grid[row][col1]\n            if col1 != col2:\n                result += grid[row][col2]\n            # transition\n            if row != m-1:\n                result += max(dp(row+1, new_col1, new_col2)\n                              for new_col1 in [col1, col1+1, col1-1]\n                              for new_col2 in [col2, col2+1, col2-1])\n            return result\n\n        return dp(0, 0, n-1)","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"cherry-pickup-ii"}