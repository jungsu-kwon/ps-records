{"id":398260612,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1600595229,"status_display":"Accepted","runtime":"264 ms","url":"/submissions/detail/398260612/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"9.8 MB","code":"#include <vector>\n#include <numeric>\n#include <iostream>\nusing namespace std;\nclass Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n\t\tauto sum = std::accumulate(nums.begin(),nums.end(),0);\n\t\tif (sum % 2 == 1)\n\t\t\treturn false;\n\t\tauto target = sum / 2 ; \n\t\tstd::vector<bool> prevDp(target+1,0);\n\t\tstd::vector<bool> dp; \n        prevDp[0] = true;\n\n\t\tfor (auto t = 0; t < nums.size(); ++t){\n\t\t\tdp = std::vector<bool>(target+1,false);\n            dp[0] = true;\n\t\t\tfor (auto i = 0; i < target+1; ++i){\n\t\t\t\tdp[i] = ( i >= nums[t]) ? prevDp[i] || prevDp[i-nums[t]] : prevDp[i];\n\t\t\t}\n\t\t\tprevDp = dp;\n\t\t\tif (dp.back())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn dp.back();\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}