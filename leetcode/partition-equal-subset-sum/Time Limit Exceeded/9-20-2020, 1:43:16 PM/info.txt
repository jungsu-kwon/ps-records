{"id":398168162,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1600576996,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/398168162/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"#include <vector>\n#include <numeric>\n#include <iostream>\nusing namespace std;\nclass Solution {\nprivate : \n\tbool dfs(std::vector<int> &nums,int target){\n\t\tif (target ==  0)\n\t\t\treturn true;\n\t\tfor (auto t = 0; t < nums.size(); ++t){\n\t\t\tauto num = nums[t];\n\t\t\tif (num == -1)\n\t\t\t\tcontinue;\n\t\t\telse if (num <= target){\n\t\t\t\tnums[t] = -1;\n\t\t\t\tif (dfs(nums,target-num))\n\t\t\t\t\treturn true;\n\t\t\t\tnums[t] = num;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\npublic:\n    bool canPartition(vector<int>& nums) {\n\t\tauto sum = std::accumulate(nums.begin(),nums.end(),0);\n\t\tif (sum % 2 == 1)\n\t\t\treturn false;\n\t\tauto target = sum / 2 ; \n\t\treturn dfs(nums,target);\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000","title_slug":"partition-equal-subset-sum"}