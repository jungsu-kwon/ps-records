{"id":493405452,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621075188,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/493405452/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        auto slow = head;\n        auto fast = head;\n\n        while (fast != nullptr)\n        {\n            slow = slow -> next;\n            fast = fast -> next ? fast -> next -> next : nullptr;\n            if (slow && slow == fast)\n                return true;\n        }\n        return false;\n        \n    }\n};","compare_result":"1111111111111111111","title_slug":"linked-list-cycle"}