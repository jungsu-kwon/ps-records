{"id":333800728,"lang":"python3","time":"1 year, 3 months","timestamp":1588516450,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/333800728/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        runner,walker = head,head\n        while runner != None and walker != None :\n            walker = walker.next\n            if runner.next != None : \n                runner = runner.next.next\n            if runner != None and runner == walker : \n                return True\n            \n        return False\n            \n            \n        ","compare_result":"11111111111111011","title_slug":"linked-list-cycle"}