// https://leetcode.com/problems/linked-list-cycle

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        runner,walker = head,head
        while runner != None and walker != None :
            walker = walker.next
            if runner.next != None : 
                runner = runner.next.next
            if runner == walker : 
                return True
            
        return False
            
            
        