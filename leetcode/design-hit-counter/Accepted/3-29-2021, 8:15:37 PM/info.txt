{"id":473827578,"lang":"python3","time":"4Â months","timestamp":1617016537,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/473827578/","is_pending":"Not Pending","title":"Design Hit Counter","memory":"14.4 MB","code":"from collections import deque\n\nclass HitCounter:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.queue = deque()\n        self.max_size = 300\n        \n\n    def hit(self, timestamp: int) -> None:\n        \"\"\"\n        Record a hit.\n        @param timestamp - The current timestamp (in seconds granularity).\n        \"\"\"\n        self.queue.append(timestamp)\n        while self.queue and (-self.queue[0] + timestamp >= self.max_size):\n            self.queue.popleft()\n\n\n        \n\n    def getHits(self, timestamp: int) -> int:\n        \"\"\"\n        Return the number of hits in the past 5 minutes.\n        @param timestamp - The current timestamp (in seconds granularity).\n        \"\"\"\n        \n        while self.queue and (-self.queue[0] + timestamp >= self.max_size):\n            self.queue.popleft()\n        return len(self.queue)\n\n\n# Your HitCounter object will be instantiated and called as such:\n# obj = HitCounter()\n# obj.hit(timestamp)\n# param_2 = obj.getHits(timestamp)\n","compare_result":"111111111111111111111111","title_slug":"design-hit-counter"}