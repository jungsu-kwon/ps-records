// https://leetcode.com/problems/contains-duplicate-iii

import collections
class Solution:
    def containsNearbyAlmostDuplicate(self, nums, k, t):
        if k < 0 or t < 0:
            return False
        # example: set([1,1,2,3]) = {1,2,3}, length = 3 != 4, so there are duplicated numbers
        if t == 0:
            return len(set(nums)) != len(nums)
        bucket = collections.OrderedDict()
        b_size = t + 1
        for num in nums:
			# explanation in picture 1 and 2
            key = num//b_size
            if key in bucket:
                return True
            bucket[key] = num
			# end of picture 1 and 2
			# explanation in picture 3
            if key - 1 in bucket and num - bucket[key - 1] <= t:
                return True
            if key + 1 in bucket and bucket[key + 1] - num <= t:
                return True
			# end of picture 3
            # remove the first added key
            if len(bucket) > k:
                bucket.popitem(last = False)
        return False