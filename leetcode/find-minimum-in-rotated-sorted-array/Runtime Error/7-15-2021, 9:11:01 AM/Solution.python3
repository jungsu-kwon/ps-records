// https://leetcode.com/problems/find-minimum-in-rotated-sorted-array

from typing import List

class Solution:
    def isLeft(self,nums: List[int],index: int) -> bool:
        """
        returns if index is left of rotational pivot
        """
        return nums[0] <= nums[index]

    def findPivot(self,nums: List[int]) -> int:
        """
        returns index of rotational pivot of nums
        """
        left: int = 0
        right: int = len(nums)

        while (left < right):
            mid: int = (left + right) // 2
            if self.isLeft(nums,mid):
                left = mid + 1
            else:
                right = mid
        return left

    def findMin(self, nums: List[int]) -> int:
        pivot: int = self.findPivot(nums)
        return nums[pivot]