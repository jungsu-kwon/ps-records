{"id":522682515,"lang":"python3","time":"2 weeks, 5 days","timestamp":1626308228,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/522682515/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array","memory":"14.7 MB","code":"from typing import List\n\nclass Solution:\n    def isLeft(self,nums: List[int],index: int) -> bool:\n        \"\"\"\n        returns if index is left of rotational pivot\n        \"\"\"\n        return nums[0] <= nums[index]\n\n    def findPivot(self,nums: List[int]) -> int:\n        \"\"\"\n        returns index of rotational pivot of nums\n        \"\"\"\n        left: int = 0\n        right: int = len(nums)\n\n        while (left < right):\n            mid: int = (left + right) // 2\n            if self.isLeft(nums,mid):\n                left = mid + 1\n            else:\n                right = mid\n        return left % len(nums)\n\n    def findMin(self, nums: List[int]) -> int:\n        pivot: int = self.findPivot(nums)\n        return nums[pivot]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-minimum-in-rotated-sorted-array"}