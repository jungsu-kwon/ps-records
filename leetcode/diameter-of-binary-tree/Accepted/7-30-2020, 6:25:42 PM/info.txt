{"id":373563307,"lang":"python3","time":"1Â year","timestamp":1596101142,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/373563307/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"15.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def depth(self,root):\n        if root == None : \n            return 0 \n        left_depth,right_depth = self.depth(root.left),self.depth(root.right)\n        self.diameter = max(self.diameter,left_depth+right_depth)\n        return max(left_depth,right_depth)+1\n    def diameterOfBinaryTree(self, root) :\n        self.diameter = 0 \n        self.depth(root)\n        return self.diameter","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}