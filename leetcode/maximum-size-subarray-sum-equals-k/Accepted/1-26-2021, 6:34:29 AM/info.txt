{"id":447778466,"lang":"python3","time":"6 months, 1 week","timestamp":1611610469,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/447778466/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"17.2 MB","code":"class Solution:\n    def maxSubArrayLen(self, nums: List[int], k: int) -> int:\n        if not nums:\n            return int(k != 0)\n        dictSumToInd = {}\n        partialSum = 0\n        maxLen = 0\n        \n        dictSumToInd[0] = -1\n        for i,num in enumerate(nums):\n            partialSum += num\n            if not partialSum  in dictSumToInd:\n                dictSumToInd[partialSum] =  i\n            if partialSum - k in dictSumToInd:\n                maxLen = max(i-dictSumToInd[partialSum - k],maxLen)\n        return maxLen\n\n        ","compare_result":"11111111111111111111111111111111111","title_slug":"maximum-size-subarray-sum-equals-k"}