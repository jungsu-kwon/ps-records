{"id":444739706,"lang":"python3","time":"6Â months, 2Â weeks","timestamp":1611005930,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/444739706/","is_pending":"Not Pending","title":"Zigzag Iterator","memory":"14.8 MB","code":"class ZigzagIterator:\n    def __init__(self, v1: List[int], v2: List[int]):\n        self.lists = [v1,v2]\n        self.n = len(v1) + len(v2)\n        self.counts= [0,0]\n        self.listInd = 0 \n\n    def next(self) -> int:\n        listToUse = self.lists[self.listInd]\n        count = self.counts[self.listInd]\n\n        if len(listToUse) > count:\n            self.counts[self.listInd] += 1 \n            self.listInd = 1 - self.listInd\n\n            return listToUse[count]\n        else:\n            self.listInd = 1 - self.listInd\n            listToUse = self.lists[self.listInd]\n            retIndex =  self.counts[self.listInd]\n            self.counts[self.listInd] += 1 \n            return listToUse[retIndex]\n\n\n\n        \n\n    def hasNext(self) -> bool:\n        return sum(self.counts) < self.n\n        \n\n# Your ZigzagIterator object will be instantiated and called as such:\n# i, v = ZigzagIterator(v1, v2), []\n# while i.hasNext(): v.append(i.next())","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"zigzag-iterator"}