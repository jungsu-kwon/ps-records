{"id":297573361,"lang":"python3","time":"1 year, 6 months","timestamp":1580052656,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/297573361/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"12.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        traversal = []\n        cur = root \n        self.stack = []\n        while self.stack or cur != None  :\n            while cur != None :\n                self.stack.append(cur)\n                cur = cur.left\n            cur = self.stack.pop()    \n            traversal.append(cur.val)\n            cur = cur.right\n        return traversal\n    \n            \n                \n                \n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}