// https://leetcode.com/problems/binary-tree-inorder-traversal

from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def inorderTraversal(self, root: TreeNode) -> List[int]:
        if not root:
            return []

        stack = []
        ans = []
        current_node = root

        while current_node or stack:
            if current_node:
                if current_node.left:
                    stack.append(current_node)
                    current_node = current_node.left
                else:
                    ans.append(current_node.val)
                    current_node = current_node.right
            else:
                current_node = stack.pop()
                ans.append(current_node.val)
                current_node = current_node.right
        return ans
                

            






        