{"id":518534076,"lang":"python3","time":"3 weeks, 6 days","timestamp":1625624100,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/518534076/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"14.1 MB","code":"from collections import deque\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return []\n\n        stack = []\n        ans = []\n        current_node = root\n\n        while current_node or stack:\n            if current_node:\n                if current_node.left:\n                    stack.append(current_node)\n                    current_node = current_node.left\n                else:\n                    ans.append(current_node.val)\n                    current_node = current_node.right\n            else:\n                current_node = stack.pop()\n                ans.append(current_node.val)\n                current_node = current_node.right\n        return ans\n                \n\n            \n\n\n\n\n\n\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}