{"id":493810920,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621141543,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/493810920/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        ListNode prehead = ListNode();\n        ListNode* cur_node = &prehead;\n\n        while (l1 != nullptr && l2 != nullptr)\n        {\n            if (l1 -> val < l2 -> val)\n            {\n                cur_node -> next = l1;\n                l1 = l1 -> next;\n            }\n            else\n            {\n                cur_node -> next = l2;\n                l2 = l2 -> next;\n            }\n            cur_node = cur_node -> next;\n        }\n        if (l2)\n            cur_node -> next = l2;\n        else if (l1)\n            cur_node -> next = l1;\n        \n        return prehead.next;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}