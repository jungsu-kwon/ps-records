{"id":447772187,"lang":"python3","time":"6 months, 1 week","timestamp":1611609219,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/447772187/","is_pending":"Not Pending","title":"Number of Connected Components in an Undirected Graph","memory":"15.7 MB","code":"class Solution:\n    def countComponents(self, n: int, edges: List[List[int]]) -> int:\n        parents, ranks, count = {}, {}, 0 \n        \n        def add(node):\n            nonlocal count\n            if not node in parents:\n                parents[node] = node\n                ranks[node] = 0\n                count += 1\n        def find(node):\n            if parents[node] != node:\n                return find(parents[node])\n            return node\n        \n        def union(node1,node2):\n            nonlocal count\n            root1,root2 = find(node1),find(node2)\n            \n            if root1 != root2:\n                smaller, larger = sorted([root1,root2],key= lambda x : ranks[x])\n                parents[smaller] = larger\n                ranks[larger] += ranks[larger] == ranks[smaller]\n                count -= 1\n        for node1,node2 in edges:\n            add(node1)\n            add(node2)\n            union(node1,node2)\n        return count + (n - len(parents))","compare_result":"111111111111111111111111111111111111111111111","title_slug":"number-of-connected-components-in-an-undirected-graph"}