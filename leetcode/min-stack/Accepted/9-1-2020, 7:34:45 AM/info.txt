{"id":389133299,"lang":"cpp","time":"11Â months","timestamp":1598913285,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/389133299/","is_pending":"Not Pending","title":"Min Stack","memory":"16.1 MB","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n    std::stack<int> valStack;\n    std::stack<int> minStack;\n    MinStack() {\n    }\n    \n    void push(int x) {\n        if (valStack.size() == 0){\n            valStack.push(x);\n            minStack.push(x);\n        }\n        else{\n            valStack.push(x);\n            if (x <= minStack.top())\n                minStack.push(x);\n        }\n    }\n    \n    void pop() {\n        if(minStack.top() == valStack.top()){\n            minStack.pop();\n            valStack.pop();\n        }\n        else\n            valStack.pop();\n    }\n    \n    int top() {\n        return valStack.top();\n    }\n    \n    int getMin() {\n        return minStack.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111111111111111","title_slug":"min-stack"}