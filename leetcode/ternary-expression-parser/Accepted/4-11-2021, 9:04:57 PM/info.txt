{"id":479279564,"lang":"python3","time":"3 months, 3 weeks","timestamp":1618142697,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/479279564/","is_pending":"Not Pending","title":"Ternary Expression Parser","memory":"14.2 MB","code":"\nclass Solution:\n\n    def parseTernary(self, expression: str) -> str:\n        stack = []\n\n        i = len(expression) - 1\n        while i >= 0:\n            ch = expression[i]\n            if ch != '?':\n                if ch == ':':\n                    i -= 1\n                else:\n                    stack.append(ch)\n                    i -= 1\n            else:\n                flag = expression[i-1]\n                left = stack.pop(-1)\n                right = stack.pop(-1)\n\n                if flag == 'T':\n                    stack.append(left)\n                else:\n                    stack.append(right)\n                i -= 2\n        return stack[0]\n\n\n\n                ","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"ternary-expression-parser"}