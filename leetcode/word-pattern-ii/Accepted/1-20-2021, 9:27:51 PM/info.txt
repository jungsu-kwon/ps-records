{"id":445461107,"lang":"python3","time":"6 months, 2 weeks","timestamp":1611145671,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/445461107/","is_pending":"Not Pending","title":"Word Pattern II","memory":"14.1 MB","code":"class Solution:\n    def match(self,pattern,s):\n        if not pattern and not s : \n            return True\n        if not pattern or not s :\n            return False\n\n        if pattern[0] in self.mapping:\n            if s.startswith(self.mapping[pattern[0]]):\n                return self.match(pattern[1:],s[len(self.mapping[pattern[0]]):])\n            else: return False\n\n        for i in range(len(s)):\n            substr = s[:i+1]\n            if substr in self.inverseMap:\n                continue\n            self.mapping[pattern[0]] = substr\n            self.inverseMap[substr] = pattern[0]\n\n            if self.match(pattern[1:],s[len(substr):]):\n                return True\n            self.mapping.pop(pattern[0],None)\n            self.inverseMap.pop(substr,None)\n        return False\n\n\n    def wordPatternMatch(self, pattern: str, s: str) -> bool:\n        self.mapping = dict()\n        self.inverseMap = dict()\n        self.strList = list(s)\n        self.index = 0\n\n\n        return self.match(pattern,s)\n        \n\n\n\n        ","compare_result":"111111111111111111111111","title_slug":"word-pattern-ii"}