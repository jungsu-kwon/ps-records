{"id":305632656,"lang":"python3","time":"1 year, 5 months","timestamp":1582345423,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/305632656/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"12.9 MB","code":"# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n        \ndef isMirror(n1,n2):\n    if n1 == None and n2 == None : \n        return True\n    if n1 == None or n2 == None : \n        return False\n    if n1.val != n2.val : \n        return False\n    if not isMirror(n1.left,n2.right) :\n        return False\n    if not isMirror(n1.right,n2.left):\n        return False\n    return True\n    \n    \nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if root == None : \n            return True\n        return isMirror(root.left,root.right)\n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}