{"id":495945467,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621543588,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/495945467/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool helper(TreeNode* left, TreeNode*  right)\n    {\n        if (!left && !right)\n            return true;\n        if (!left || !right)\n            return false;\n        if (left -> val != right -> val)\n            return false;\n        if (!helper(left -> right,right -> left) || !helper(left -> left, right -> right) )\n            return false;\n        return true;\n    }\npublic:\n    bool isSymmetric(TreeNode* root) {\n        if (!root) return true;\n        return helper(root -> left, root -> right);\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}