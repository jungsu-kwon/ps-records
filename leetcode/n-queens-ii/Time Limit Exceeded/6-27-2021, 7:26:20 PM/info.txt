{"id":513882587,"lang":"python3","time":"1Â month","timestamp":1624789580,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/513882587/","is_pending":"Not Pending","title":"N-Queens II","memory":"N/A","code":"class Solution:\n\tdef attackable(self,pos):\n\t\tans = set([])\n\t\ty,x = pos\n\n\t\tfor i in range(self.n):\n\t\t\tans.add((y,i))\n\t\t\tans.add((i,x))\n\t\t\n\t\tstart = [y-x,0] if y > x else [0,x-y]\n\t\tfor i in range(self.n - abs(y-x)):\n\t\t\tans.add(tuple([point+i for point in start]))\n\t\t\n\t\tsum_ = x + y\n\t\tstart = [sum_,0] if sum_ < self.n else [self.n-1,sum_ - self.n+1]\n\t\tfor i in range(self.n - abs(self.n - sum_ - 1)):\n\t\t\tans.add((start[0]-i,start[1]+i))\n\n\t\treturn ans\n\tdef hash_func(self,current:set):\n\t\tsorted_list = sorted(current,key=lambda x : x[0])\n\t\treturn tuple([item for sublist in sorted_list for item in sublist ])\n\n\t \n\tdef helper(self,current, available):\n\t\t# print(current,available)\n\t\tif self.hash_func(current) in self.visited:\n\t\t\treturn\n\n\t\tif len(current) == self.n:\n\t\t\tself.ans += 1\n\t\t\t# print('here')\n\t\t\t# print(current)\n\t\t\t# print(available)\n\t\t\treturn\n\n\t\telif not available:\n\t\t\treturn\n\t\t\n\n\t\tori_avail = set(available)\n\t\tfor pos in ori_avail:\n\t\t\t# print(ori_avail)\n\t\t\tavailable = ori_avail - self.attackable(pos)\n\t\t\t# print(available,current)\n\t\t\t# print(current)\n\t\t\tcurrent.add(pos)\n\n\t\t\tself.helper(current,available)\n\t\t\t# print(pos)\n\t\t\tself.visited.add(self.hash_func(current))\n\t\t\tcurrent.remove(pos)\n\t\t\t# print(current)\n\n\tdef totalNQueens(self, n: int) -> int:\n\t\tself.ans = 0\n\t\tself.visited = set()\n\t\tself.n = n\n\t\tavailable = [(i,j) for i in range(self.n) \n\t\t\t   \t\t\t\tfor j in range(self.n)]\n\n\t\tself.helper(set([]),available)\n\n\t\treturn self.ans\n# if __name__ == '__main__':\n# \tsolver = Solution()\n# \tans = solver.totalNQueens(4)\n# \t# print(solver.attackable((1,0)))\n# \t# print(solver.attackable((0,1)))\n# \t# assert 1==0\n# \tprint(ans)\n\t\t\n\n\t\t","compare_result":"111111110","title_slug":"n-queens-ii"}