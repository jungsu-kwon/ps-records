// https://leetcode.com/problems/n-queens-ii

class Solution:
	def backtrack(self,row,cols,diagonal,anti_diag):
		if row == self.n:
			self.ans += 1
			return 
			
		for col in range(self.n):
			anti = row + col
			diag = row - col

			if anti in anti_diag or \
   			   diag in diagonal  or \
			   col in cols:
				continue

			anti_diag.add(anti)
			cols.add(col)
			diagonal.add(diag)

			self.backtrack(row+1, cols, diagonal, anti_diag)

			anti_diag.remove(anti)
			cols.remove(col)
			diagonal.remove(diag)
			
	def totalNQueens(self, n: int) -> int:
		self.ans = 0
		self.n = n
		self.backtrack(0, set([]), set([]), set([]))
		return self.ans
