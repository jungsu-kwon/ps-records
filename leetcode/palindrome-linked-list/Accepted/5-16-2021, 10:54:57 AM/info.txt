{"id":493725888,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621130097,"status_display":"Accepted","runtime":"272 ms","url":"/submissions/detail/493725888/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"114.1 MB","code":"#include <iostream>\nusing namespace std;\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* reverse_list(ListNode* head)\n    {\n        if (head == nullptr) return head;\n        auto cur_node = head;\n        while (cur_node -> next != nullptr)\n        {\n            cur_node = cur_node -> next;\n        }\n        auto tail = cur_node;\n\n        while (head != tail)\n        {\n            auto next_node = head -> next;\n            head -> next = tail -> next;\n            tail -> next = head;\n            head = next_node;\n        }\n        return head;\n    }\n    ListNode* get_node(ListNode* head, int index)\n    {\n        auto node = head;\n        for (auto i = 0; i < index; ++i)\n        {\n            node = node -> next;\n        }\n        return node;\n    }\npublic:\n    bool isPalindrome(ListNode* head) {\n        auto cur_node = head;\n        int len = 0;\n        while (cur_node != nullptr)\n        {\n            cur_node = cur_node -> next;\n            len++;\n        }\n        \n\n        auto head2 = reverse_list(get_node(head,(len+1)/2));\n        cur_node = head;\n        auto cur_node2 = head2;\n\n        while (cur_node2 != nullptr)\n        {\n            if (cur_node -> val != cur_node2 -> val)\n                return false;\n            cur_node = cur_node -> next;\n            cur_node2 = cur_node2 -> next;\n        }\n\n        return true;\n\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}