{"id":395778508,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1600120435,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/395778508/","is_pending":"Not Pending","title":"Word Break","memory":"10 MB","code":"\nclass Solution {\nprivate : \n\tbool startsWith(std::string s,int startInd, std::string prefixCand)\n\t{\n\t\tif (s.size() < prefixCand.size()+startInd) return false;\n\t\tfor (auto t = 0; t < prefixCand.size(); ++t)\n\t\t{\n\t\t\tif(prefixCand[t] != s[t+startInd]) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tbool wordBreak(string s, int startInd, vector<string>& wordDict,std::vector<int> &visited)\n\t{\n\t\tif (startInd == s.size()) return true;\n\t\tfor (auto word : wordDict)\n\t\t{\n\t\t\tif (startsWith(s,startInd,word))\n\t\t\t{\n\t\t\t\tif (startInd + word.size() == s.size())\n\t\t\t\t\treturn true;\n\t\t\t\telse if (visited[startInd+word.size()] == 0 &&\n\t\t\t\t\t\twordBreak(s,startInd + word.size(), wordDict,visited))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvisited[startInd] = 1;\n\t\treturn false;\n\t}\npublic:\n\tbool wordBreak(string s, vector<string>& wordDict) {\n\t\tstd::vector<int> visited(s.size(),0);\n\t\treturn  wordBreak(s,0,wordDict,visited);\n\t}\n};\n","compare_result":"1111111111111111111111111111111111111111111","title_slug":"word-break"}