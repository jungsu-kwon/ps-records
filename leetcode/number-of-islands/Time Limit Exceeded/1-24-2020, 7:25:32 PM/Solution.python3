// https://leetcode.com/problems/number-of-islands

class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if len(grid) == 0 : 
            return 0 
        
        self.visited = set([])
        self.h = len(grid)
        self.w = len(grid[0])
        print(self.h,self.w)
        self.queue = []
        
        self.num_island = 0 
        for i_ in range(self.h) : 
            for j_ in range(self.w) :
                if (i_,j_) in self.visited : 
                    continue
                if grid[i_][j_] == '0' : 
                    continue
                # grid[i][j] == '1' 
                # after this point    
                self.queue.append((i_,j_))
                while(self.queue) : 
                    node = self.queue.pop(0) 
                    i,j = node
                    
                    if i - 1 >= 0 :
                        if grid[i-1][j] == '1' and not ((i-1,j) in self.visited) : 
                            self.queue.append((i-1,j))
                        
                    if j - 1 >= 0 :
                        if grid[i][j-1] == '1'and not ((i,j-1) in self.visited) : 
                            self.queue.append((i,j-1))
                            
                    if i + 1 < self.h :
                        if grid[i+1][j] == '1' and not ((i+1,j) in self.visited) :  
                            self.queue.append((i+1,j))
                        
                    if j + 1 < self.w :
                        if grid[i][j+1] == '1' and not ((i,j+1) in self.visited) : 
                            self.queue.append((i,j+1))
                            
                    self.visited.add((i,j))        
                self.num_island += 1 
        return self.num_island
                   
                                    

                    
        
        
        
        
            
        
 