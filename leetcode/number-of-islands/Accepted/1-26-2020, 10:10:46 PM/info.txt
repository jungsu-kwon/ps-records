{"id":297553277,"lang":"python3","time":"1 year, 6 months","timestamp":1580044246,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/297553277/","is_pending":"Not Pending","title":"Number of Islands","memory":"17.9 MB","code":"class Solution:\n    def numIslands(self, grid):\n        self.visited = set([])\n        self.stack = []\n        if grid == [] : \n            return 0 \n\n        self.h = len(grid)\n        self.w = len(grid[0])\n        self.count = 0\n        self.grid = grid\n\n\n        for i in range(self.h):\n            for j in range(self.w) : \n                cur = int(grid[i][j])\n                if cur == 0 : \n                    continue\n                if cur == 1 and not ((i,j) in self.visited) : \n                    self.dfs(i,j)\n                    self.count += 1 \n        return self.count\n                \n\n    def dfs(self,i,j):\n        self.stack = [(i,j)]\n\n        while self.stack : \n            node = self.stack.pop()\n            i,j = node \n            if self.grid[i][j] == '0' or (i,j) in self.visited :\n                continue\n            \n\n            if i-1 >=0 and not ((i-1,j)  in self.visited) : \n                self.stack.append((i-1,j))\n            if j-1 >=0 and not ((i,j-1)  in self.visited) : \n                self.stack.append((i,j-1))\n            if i+1<self.h and not ((i+1,j)  in self.visited) : \n                self.stack.append((i+1,j))\n            if j+1<self.w and not ((i,j+1)  in self.visited) : \n                self.stack.append((i,j+1))\n            self.visited.add((i,j))\n\n","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}