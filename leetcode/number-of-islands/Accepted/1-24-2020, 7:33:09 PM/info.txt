{"id":297017106,"lang":"python3","time":"1 year, 6 months","timestamp":1579861989,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/297017106/","is_pending":"Not Pending","title":"Number of Islands","memory":"17.6 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        if len(grid) == 0 : \n            return 0 \n        \n        self.visited = set([])\n        self.h = len(grid)\n        self.w = len(grid[0])\n        self.queue = []\n        \n        self.num_island = 0 \n        for i_ in range(self.h) : \n            for j_ in range(self.w) :\n                if (i_,j_) in self.visited : \n                    continue\n                if grid[i_][j_] == '0' : \n                    continue\n                # grid[i][j] == '1' \n                # after this point    \n                self.queue.append((i_,j_))\n                while(self.queue) : \n                    node = self.queue.pop(0) \n                    if node in self.visited : \n                        continue\n                    i,j = node\n                    if grid[i][j] == '0' : \n                        continue\n                    \n                    if i - 1 >= 0 :\n                        self.queue.append((i-1,j))\n                        \n                    if j - 1 >= 0 :\n                        self.queue.append((i,j-1))\n                            \n                    if i + 1 < self.h :\n                        self.queue.append((i+1,j))\n                        \n                    if j + 1 < self.w :\n                        self.queue.append((i,j+1))\n                            \n                    self.visited.add((i,j))        \n                self.num_island += 1 \n        return self.num_island\n                   \n                                    \n\n                    \n        \n        \n        \n        \n            \n        \n ","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}