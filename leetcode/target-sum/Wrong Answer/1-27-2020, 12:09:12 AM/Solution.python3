// https://leetcode.com/problems/target-sum

class Solution:
    def getDP(self,i,j):
        if j >= 2001  or j < 0: 
            return 0 
        else : 
            return self.dp[i][j]
    def findTargetSumWays(self, nums, S) :
        self.n = len(nums)
        self.dp = [[0 for i in range(2001)] for i in range(self.n+1)]
        self.dp[0][nums[0]+1000] = 1
        self.dp[0][-nums[0] + 1000] = 1

        for i in range(1,self.n):
            for j in range(2000) : 
                self.dp[i][j] = self.getDP(i-1,j+nums[i]) + self.getDP(i-1,j-nums[i])
        return self.getDP(self.n-1,S+1000)
         