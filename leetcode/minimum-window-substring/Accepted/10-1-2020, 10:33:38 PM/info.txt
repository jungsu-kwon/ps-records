{"id":403104746,"lang":"cpp","time":"10Â months","timestamp":1601559218,"status_display":"Accepted","runtime":"496 ms","url":"/submissions/detail/403104746/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"349.7 MB","code":"#include <vector>\n#include <string>\n#include <queue>\n#include <unordered_map>\nusing namespace std;\n\nclass Solution {\nprivate :\n\tint outOfTemplate = -1000;\n\tint inTemplate = -1;\n\tbool equal(std::unordered_map<int,int> &t, std::unordered_map<int,int> &m){\n\t\tfor (auto k : t){\n\t\t\tif (m[k.first] < k.second)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\npublic:\n    string minWindow(string s, string t) {\n\t\tstd::priority_queue<int,std::vector<int>,std::greater<int>> minHeap;\n\t\tstd::vector<int> vecLastOccurence('z' -'A' + 1 ,outOfTemplate);\n\t\tstd::unordered_map<int,int> counter;\n\t\tstd::unordered_map<int,int> templateCounter;\n\t\tfor (auto ch : t){\n\t\t\tcounter[ch-'A'] = 0;\n\t\t\ttemplateCounter[ch-'A'] += 1;\n\t\t}\n\t\tint ind = 0;\n\t\tint nMinLen = s.size()+1;\n\t\tstd::string  strAns = \"\";\n\n\t\tfor (auto ch : s){\n            \n\t\t\tif (templateCounter.find(ch-'A') != templateCounter.end())\n\t\t\t{\n\t\t\t\tcounter[ch-'A'] += 1 ;\n                minHeap.push(ind);\n\t\t\t\tauto chHeapTop = s[minHeap.top()];\n\t\t\t\twhile (minHeap.size() && counter[chHeapTop-'A'] > templateCounter[chHeapTop-'A']){\n\t\t\t\t\tminHeap.pop();\n                    counter[chHeapTop-'A'] -= 1;\n\t\t\t\t\tchHeapTop = s[minHeap.top()];\n\t\t\t\t}\n\n\n\t\t\t\tif (equal(templateCounter,counter)){\n\t\t\t\t\tstrAns = (ind - minHeap.top() + 1 < nMinLen) ? s.substr(minHeap.top(),ind - minHeap.top()+1) : strAns;\n\t\t\t\t\tnMinLen = std::min(ind - minHeap.top() + 1 , nMinLen);\n\t\t\t\t}\n\t\t\t}\n            ind += 1 ;\n\t\t}\n\t\treturn strAns;\n\n\n        \n    }\n};\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}