{"id":403097995,"lang":"cpp","time":"10Â months","timestamp":1601557482,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/403097995/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"#include <vector>\n#include <string>\n#include <queue>\nusing namespace std;\n\nclass Solution {\nprivate :\n\tint outOfTemplate = -1000;\n\tint inTemplate = -1;\npublic:\n    string minWindow(string s, string t) {\n\t\tstd::priority_queue<int,std::vector<int>,std::greater<int>> minHeap;\n\t\tstd::vector<int> vecLastOccurence('Z' -'A' + 1 ,outOfTemplate);\n\t\tfor (auto ch : t){\n\t\t\tvecLastOccurence[ch-'A'] = inTemplate;\n\t\t}\n\t\tint numChars = 0;\n\t\tint ind = 0;\n\t\tint nMinLen = s.size();\n\t\tstd::string  strAns = \"\";\n\n\t\tfor (auto ch : s){\n            \n\t\t\tif (vecLastOccurence[ch-'A'] >= inTemplate)\n\t\t\t{\n\t\t\t\tnumChars += (vecLastOccurence[ch-'A'] == inTemplate);\n                vecLastOccurence[ch-'A'] = ind;\n                minHeap.push(ind);\n\t\t\t\tauto chHeapTop = s[minHeap.top()];\n\t\t\t\twhile (minHeap.size() && vecLastOccurence[chHeapTop-'A'] != minHeap.top()){\n\t\t\t\t\tminHeap.pop();\n\t\t\t\t\tchHeapTop = s[minHeap.top()];\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\tif (numChars == t.size()){\n\t\t\t\t\tstrAns = (ind - minHeap.top() + 1 < nMinLen) ? s.substr(minHeap.top(),ind - minHeap.top()+1) : strAns;\n\t\t\t\t\tnMinLen = std::min(ind - minHeap.top() + 1 , nMinLen);\n\t\t\t\t}\n\t\t\t}\n            ind += 1 ;\n\t\t}\n\t\treturn strAns;\n\n\n        \n    }\n};\n\n","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-window-substring"}