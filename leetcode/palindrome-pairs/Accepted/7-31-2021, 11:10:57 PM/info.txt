{"id":531084736,"lang":"python3","time":"2 days, 18 hours","timestamp":1627740657,"status_display":"Accepted","runtime":"644 ms","url":"/submissions/detail/531084736/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"23 MB","code":"class Solution:\n    def palindromePairs(self, words: List[str]) -> List[List[int]]:\n        bucket = sorted([(w, False, i) for i, w in enumerate(words)] + [(w[::-1], True, i) for i, w in enumerate(words)])\n        pairs = []\n        for i in range(len(bucket) - 1):\n            w, is_rev, idx = bucket[i]\n            for j in range(i + 1, len(bucket)):\n                _w, _is_rev, _idx = bucket[j]\n                if _w.startswith(w):\n                    if is_rev != _is_rev and idx != _idx and (remaining:= _w[len(w):]) == remaining[::-1]:\n                        pairs += [[idx, _idx]] if _is_rev else [[_idx, idx]]\n                else:\n                    break\n        return pairs","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-pairs"}