// https://leetcode.com/problems/palindrome-pairs

class Solution:
    def palindromePairs(self, words: List[str]) -> List[List[int]]:
        bucket = sorted([(w, False, i) for i, w in enumerate(words)] + [(w[::-1], True, i) for i, w in enumerate(words)])
        pairs = []
        for i in range(len(bucket) - 1):
            w, is_rev, idx = bucket[i]
            for j in range(i + 1, len(bucket)):
                _w, _is_rev, _idx = bucket[j]
                if _w.startswith(w):
                    if is_rev != _is_rev and idx != _idx and (remaining:= _w[len(w):]) == remaining[::-1]:
                        pairs += [[idx, _idx]] if _is_rev else [[_idx, idx]]
                else:
                    break
        return pairs