{"id":530934881,"lang":"python3","time":"3 days, 2 hours","timestamp":1627712114,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/530934881/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"N/A","code":"from typing import List, Dict, Set, Tuple\n\nclass TrieNode:\n    def __init__(self):\n        self.children: Dict[str,TrieNode] = {}\n        self.words: Set[Tuple[str,int]] = set([])\n        self.word: str = \"\"\n        self.ind: int = -1\n\nclass Solution:\n\n    def palindromePairs(self, words: List[str]) -> List[List[int]]:\n        self.root: TrieNode = TrieNode()\n        ans: List[List[int]] = []\n        hasEmptyString: bool = True\n\n        for i,word in enumerate(words):\n            inverseWord: str = word[::-1]\n            curNode = self.root\n            for ch in inverseWord:\n                if not ch in curNode.children:\n                    curNode.children[ch] = TrieNode()\n                curNode = curNode.children[ch]\n                curNode.words.add((inverseWord,i))\n\n            curNode.word = word\n            curNode.ind = i\n\n        def isPalindrome(word):\n            return word == word[::-1]\n        \n        for i,word in enumerate(words):\n            curNode: TrieNode = self.root\n            broke: bool = False\n            for j,ch in enumerate(word):\n                if curNode.word:\n                    middle: str = word[j:]\n                    if isPalindrome(middle) and i != curNode.ind:\n                        ans.append([i,curNode.ind])\n\n                if not ch in curNode.children:\n                    broke = True\n                    break\n                curNode = curNode.children[ch]\n            if broke:\n                continue\n            \n            # print(word)\n            # print(curNode.words)\n            for word2,j in curNode.words:\n                if isPalindrome(word2[len(word):]) and i != j:\n                    ans.append([i,j])\n\n        return ans\n\n            \n            \n                    \n                \n\n\n            \n        \n\n        ","compare_result":"110001111000101100011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-pairs"}