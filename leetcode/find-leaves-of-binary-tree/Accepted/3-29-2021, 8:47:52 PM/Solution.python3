// https://leetcode.com/problems/find-leaves-of-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def get_depth(self,root : TreeNode) -> int:
        if not root:
            return -1
        depth = max(self.get_depth(root.left), 
                    self.get_depth(root.right)) + 1

        if len(self.ans) <= depth:
            self.ans.append([])
        self.ans[depth].append(root.val)

        return depth

    def findLeaves(self, root: TreeNode) -> List[List[int]]:
        self.ans = []
        self.get_depth(root)

        return self.ans

        








        
