{"id":517192861,"lang":"python3","time":"4 weeks, 1 day","timestamp":1625392818,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/517192861/","is_pending":"Not Pending","title":"Robot Room Cleaner","memory":"15.4 MB","code":"class Solution(object):       \n    def cleanRoom(self, robot):\n        \"\"\"\n        :type robot: Robot\n        :rtype: None\n        \"\"\"\n        def go_back():\n            robot.turnRight()\n            robot.turnRight()\n            robot.move()\n            robot.turnRight()\n            robot.turnRight()\n            \n        def backtrack(cell = (0, 0), d = 0):\n            visited.add(cell)\n            robot.clean()\n            # going clockwise : 0: 'up', 1: 'right', 2: 'down', 3: 'left'\n            for i in range(4):\n                new_d = (d + i) % 4\n                new_cell = (cell[0] + directions[new_d][0], \\\n                            cell[1] + directions[new_d][1])\n                \n                if not new_cell in visited and robot.move():\n                    backtrack(new_cell, new_d)\n                    go_back()\n                # turn the robot following chosen direction : clockwise\n                robot.turnRight()\n    \n        # going clockwise : 0: 'up', 1: 'right', 2: 'down', 3: 'left'\n        directions = [(-1, 0), (0, 1), (1, 0), (0, -1)]\n        visited = set()\n        backtrack()","compare_result":"11111111111111111111111111111","title_slug":"robot-room-cleaner"}