{"id":517514297,"lang":"python3","time":"4 weeks, 1 day","timestamp":1625451714,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/517514297/","is_pending":"Not Pending","title":"Robot Room Cleaner","memory":"15.5 MB","code":"class Solution:\n\tdef come_back(self):\n\t\tself.robot.turnLeft()\n\t\tself.robot.turnLeft()\n\t\tself.robot.move()\n\t\tself.robot.turnLeft()\n\t\tself.robot.turnLeft()\n\tdef turn_left(self):\n\t\tself.robot.turnLeft()\n\t\tself.ind = (self.ind + 1) % 4 \n\t\t\n\tdef helper(self,pos):\n\t\tself.robot.clean()\n\t\tself.visited.add(pos)\n\n\t\tfor i in range(4):\n\t\t\tdelta = self.orientations[self.ind]\n\t\t\tnew_pos = (pos[0]+delta[0],pos[1]+delta[1])\n\n\t\t\tif new_pos in self.visited or not self.robot.move():\n\t\t\t\tself.turn_left()\n\t\t\t\tcontinue\n\n\t\t\tself.helper(new_pos)\n\t\t\tself.come_back()\n\t\t\tself.turn_left()\n\n\n\t\t\t\n\t\t\t\t\n\n\tdef cleanRoom(self, robot):\n\t\t\"\"\"\n\t\t:type robot: Robot\n\t\t:rtype: None\n\t\t\"\"\"\n\t\tself.orientations = [(-1,0),(0,-1),(1,0),(0,1)]\n\t\tself.ind = 0\n\t\tself.pos = (0,0)\n\t\tself.visited = set([])\n\t\tself.robot = robot\n\n\t\tself.helper(self.pos)\n\n\n\n\n\n","compare_result":"11111111111111111111111111111","title_slug":"robot-room-cleaner"}