{"id":517450452,"lang":"python3","time":"4 weeks, 1 day","timestamp":1625436386,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/517450452/","is_pending":"Not Pending","title":"Robot Room Cleaner","memory":"15.7 MB","code":"class Solution:\n    def come_back(self):\n        self.robot.turnLeft()\n        self.robot.turnLeft()\n        self.robot.move()\n        self.robot.turnLeft()\n        self.robot.turnLeft()\n\n    def helper(self,pos):\n        self.robot.clean()\n        self.visited.add(pos)\n\n        for i in range(4):\n            delta = self.orientations[self.ind]\n            new_pos = (pos[0]+delta[0],pos[1]+delta[1])\n\n            if new_pos in self.visited or not self.robot.move():\n                self.robot.turnLeft()\n                self.ind = (self.ind + 1) % 4\n                continue\n\n            self.helper(new_pos)\n            self.come_back()\n\n            self.robot.turnLeft()\n            self.ind = (self.ind + 1) % 4\n\n\n            \n                \n\n    def cleanRoom(self, robot):\n        \"\"\"\n        :type robot: Robot\n        :rtype: None\n        \"\"\"\n        self.orientations = [(-1,0),(0,-1),(1,0),(0,1)]\n        self.ind = 0\n        self.pos = (0,0)\n        self.visited = set([])\n        self.robot = robot\n\n        self.helper(self.pos)\n\n\n\n\n\n","compare_result":"11111111111111111111111111111","title_slug":"robot-room-cleaner"}