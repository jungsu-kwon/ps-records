{"id":304305458,"lang":"python3","time":"1 year, 5 months","timestamp":1581980795,"status_display":"Accepted","runtime":"5268 ms","url":"/submissions/detail/304305458/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"18.5 MB","code":"class Solution:\n    def maxSumAfterPartitioning(self, A, K):\n        self.n = len(A)\n        if self.n == 0 : \n            return 0\n        \n        self.maxi = [0 for i in range(K)]\n        self.dp = [[0 for i in range(K)] for i in range(self.n)]\n        self.dp[0][0] = A[0]\n        \n        for i in range(1,self.n):\n            self.dp[i][0] = max(self.dp[i-1]) + A[i]\n            for j in range(1,K): \n                if i  < j : \n                    continue\n                self.dp[i][j] = self.dp[i-1][j-1] -(j)*max(A[i-j:i]) + (j+1)*max(A[i-j:i+1])\n                #self.maxi[j] = max(self.maxi[j-1],A[i-j])\n        \n        return max(self.dp[self.n-1])\n                \n\n\n\n\n         \n                \n                \n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum"}