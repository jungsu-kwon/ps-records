{"id":389384164,"lang":"cpp","time":"11Â months","timestamp":1598957247,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/389384164/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode *prevNode = nullptr;\n        ListNode *curNode = head;\n        ListNode *tempNode = nullptr;\n        \n        while(curNode != nullptr){\n            tempNode = curNode->next;\n            curNode->next = prevNode;\n            prevNode = curNode;\n            curNode = tempNode;\n        }\n        return prevNode;\n        \n    }\n};","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list"}