{"id":493457470,"lang":"cpp","time":"2Â months, 2Â weeks","timestamp":1621085437,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/493457470/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (head == nullptr)\n            return nullptr;\n        auto cur_node = head;\n\n        while (cur_node -> next != nullptr)\n            cur_node = cur_node -> next;\n\n        auto tail = cur_node;\n\n        while (head != tail)\n        {\n            cur_node = head;\n            head = cur_node -> next;\n\n            auto next_node = tail -> next;\n            tail -> next = cur_node;\n            cur_node -> next = next_node;\n        }\n        return tail;\n\n\n        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}