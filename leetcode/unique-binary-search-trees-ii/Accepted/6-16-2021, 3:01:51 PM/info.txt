{"id":508633624,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1623823311,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/508633624/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"15.5 MB","code":"#include <vector>\nusing namespace std;\n\n\nclass Solution {\nprivate:\n    void helper(vector<TreeNode*> &nodes,int start, int end)\n    {\n        if (start == end) \n        {\n            nodes.push_back(new TreeNode(start));\n            return;\n        }\n        else if (start > end) \n        {\n            nodes.push_back(nullptr);\n            return;\n        }\n       \n        for (int root = start; root < end+1; ++root)\n        {\n            vector<TreeNode*> left_subtrees;\n            helper(left_subtrees,start,root-1);\n            \n            vector<TreeNode*> right_subtrees;\n            helper(right_subtrees,root+1,end);\n            \n            for (auto left:left_subtrees)\n            {\n                for (auto right:right_subtrees)\n                {\n                    TreeNode* root_node = new TreeNode(root);\n                    root_node -> left = left;\n                    root_node -> right = right;\n                    nodes.push_back(root_node);\n                }\n            }\n        }\n    }\npublic:\n    vector<TreeNode*> generateTrees(int n) {\n        vector<TreeNode*> ans{};\n        helper(ans,1,n);\n        return ans;\n        \n    }\n};","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}