{"id":305632475,"lang":"python3","time":"1 year, 5 months","timestamp":1582345369,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/305632475/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"14.1 MB","code":"class Solution:\n    def generateTrees(self, n: int) -> List[TreeNode]:\n        if n == 0 :\n            return []\n        \n        def generate_tree(start,end):\n            trees = []\n            if start > end : \n                return [None]\n            for root_val in range(start,end+1):\n                ls = generate_tree(start,root_val-1)\n                rs = generate_tree(root_val+1,end)\n                \n                for l in ls :\n                    for r in rs :\n                        root = TreeNode(root_val)\n                        root.left = l\n                        root.right = r \n                        trees.append(root)\n                        \n            return trees\n        return generate_tree(1,n)\n                        ","compare_result":"111111111","title_slug":"unique-binary-search-trees-ii"}