// https://leetcode.com/problems/number-of-corner-rectangles

class Solution:
    def countCornerFromRows(self,grid):
        num_square = 0 
        for start in range(self.num_cols):
            for end in range(start+1,self.num_cols):
                base_count = 0 
                for row in range(self.num_rows):
                    if grid[row][start] == 1 and grid[row][end] == 1 : 
                        num_square += base_count
                        base_count += 1
        return num_square

    def countCornerFromCols(self,grid):
        num_square = 0 
        for start in range(self.num_rows):
            for end in range(start+1,self.num_rows):
                base_count = 0 
                for col in range(self.num_cols):
                    if grid[start][col] == 1 and grid[end][col] == 1 : 
                        num_square += base_count
                        base_count += 1
        return num_square


        return num_corners

    def countCornerRectangles(self, grid):
        self.num_rows = len(grid)
        self.num_cols = len(grid[0])

        if self.num_rows <=  1 or self.num_cols <= 1 : 
            return 0 

        if self.num_rows <= self.num_cols : 
            return self.countCornerFromRows(grid)
        else : 
            return self.countCornerFromCols(grid)