{"id":450282349,"lang":"python3","time":"6Â months","timestamp":1612127353,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/450282349/","is_pending":"Not Pending","title":"Design Tic-Tac-Toe","memory":"16.8 MB","code":"class TicTacToe:\n\n    def __init__(self, n: int):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.rows,self.cols = [0 for i in range(n)], [0 for i in range(n)]\n        self.dig, self.aDig = 0,0\n        self.n = n\n    def move(self, row: int, col: int, player: int) -> int:\n        \"\"\"\n        Player {player} makes a move at ({row}, {col}).\n        @param row The row of the board.\n        @param col The column of the board.\n        @param player The player, can be either 1 or 2.\n        @return The current winning condition, can be either:\n                0: No one wins.\n                1: Player 1 wins.\n                2: Player 2 wins.\n        \"\"\"\n        increment = 1 if player ==1 else -1\n        n = self.n\n        if row == col:\n            self.dig += increment\n            if self.dig == n or self.dig == -n:\n                return player\n        if row + col == n -1 :\n            self.aDig += increment\n            if self.aDig == n or self.aDig == -n:\n                return player\n\n        self.rows[row] += increment\n        self.cols[col] += increment\n        if self.rows[row] == n or self.cols[col] == n :\n            return player\n        elif self.rows[row] == -n or self.cols[col] == -n :\n            return player\n        return 0\n                \n        \n\n\n# Your TicTacToe object will be instantiated and called as such:\n# obj = TicTacToe(n)\n# param_1 = obj.move(row,col,player)","compare_result":"111111111111111111111111111111111","title_slug":"design-tic-tac-toe"}