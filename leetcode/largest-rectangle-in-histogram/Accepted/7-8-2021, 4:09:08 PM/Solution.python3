// https://leetcode.com/problems/largest-rectangle-in-histogram

from  collections import deque
from typing import List
class Solution:
    def get_ends(self,heights):
        stack = deque([])
        ends = [-1 for _ in heights]
        for i,height_i in enumerate(heights):
            while stack and height_i < stack[0][1]:
                j,_ = stack.popleft()
                ends[j] = i
            stack.appendleft((i,height_i))

        i = len(heights)
        while stack:
            j,_ = stack.popleft()
            ends[j] = i
        return ends

    def get_starts(self,heights):
        stack = deque([])
        starts = [-1 for _ in heights]

        for i in range(len(heights)-1,-1,-1):
            height_i = heights[i]
            while stack and height_i < stack[0][1]:
                j,_ = stack.popleft()
                starts[j] = i
            stack.appendleft((i,height_i))
        i = -1
        while stack:
            j,_ = stack.popleft()
            starts[j] = -1

        return starts


                
    def largestRectangleArea(self, heights: List[int]) -> int:
        starts = self.get_starts(heights)
        ends = self.get_ends(heights)
        # print(heights)
        # print(starts)
        # print(ends)
        ans = max([(end - start - 1)*heights[i] for i,(start,end) in enumerate(zip(starts,ends))])

        return ans