{"id":402887139,"lang":"cpp","time":"10Â months","timestamp":1601512152,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/402887139/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"14.9 MB","code":"#include <stack>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nclass Solution {\nprivate :\n\tstd::vector<int> nextSmallestInd(std::vector<int> &heights){\n\t\tstd::vector<int> nextSmallestind(heights.size(),-1);\n\t\tstd::stack<int> indStack;\n\t\tfor (auto t = 0 ; t < heights.size(); ++t){\n\t\t\twhile (indStack.size() && heights[indStack.top()] >= heights[t]){\n\t\t\t\tindStack.pop();\n\t\t\t}\n\t\t\tif (indStack.size())\n\t\t\t\tnextSmallestind[t] = indStack.top();\n\t\t\tindStack.push(t);\n\t\t}\n\t\treturn nextSmallestind;\n\t}\n\tstd::vector<int> nextSmallestIndR(std::vector<int> &heights){\n\t\tstd::vector<int> nextSmallestind(heights.size(),heights.size());\n\t\tstd::stack<int> indStack;\n\t\tfor (int t = heights.size()-1 ; t > -1; --t){\n\t\t\twhile (indStack.size() && heights[indStack.top()] >= heights[t]){\n\t\t\t\tindStack.pop();\n\t\t\t}\n\t\t\tif (indStack.size())\n\t\t\t\tnextSmallestind[t] = indStack.top();\n\t\t\tindStack.push(t);\n\t\t}\n\t\treturn nextSmallestind;\n\n\t}\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n\t\tauto vecSmallest = nextSmallestInd(heights);\n\t\tauto vecRSmallest = nextSmallestIndR(heights);\n\t\tint nMaxArea = 0;\n\n\n\t\tfor (auto t = 0; t < heights.size(); ++t){\n\t\t\tauto l = vecSmallest[t];\n\t\t\tauto r = vecRSmallest[t];\n\t\t\tnMaxArea = std::max(nMaxArea,(r-l-1) * heights[t]);\n\t\t}\n\t\treturn nMaxArea;\n\n\n\n        \n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram"}