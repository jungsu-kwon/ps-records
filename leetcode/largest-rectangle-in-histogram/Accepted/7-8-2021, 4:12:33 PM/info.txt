{"id":519159049,"lang":"python3","time":"3 weeks, 5 days","timestamp":1625728353,"status_display":"Accepted","runtime":"1004 ms","url":"/submissions/detail/519159049/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"30.8 MB","code":"from  collections import deque\nfrom typing import List\nclass Solution:\n    def get_ends(self,heights):\n        stack = deque([])\n        ends = [-1 for _ in heights]\n        for i,height_i in enumerate(heights):\n            while stack and height_i < stack[0][1]:\n                j,_ = stack.popleft()\n                ends[j] = i\n            stack.appendleft((i,height_i))\n\n        i = len(heights)\n        while stack:\n            j,_ = stack.popleft()\n            ends[j] = i\n        return ends\n\n    def get_starts(self,heights):\n        stack = deque([])\n        starts = [-1 for _ in heights]\n\n        for i in range(len(heights)-1,-1,-1):\n            height_i = heights[i]\n            while stack and height_i < stack[0][1]:\n                j,_ = stack.popleft()\n                starts[j] = i\n            stack.appendleft((i,height_i))\n        i = -1\n        while stack:\n            j,_ = stack.popleft()\n            starts[j] = -1\n\n        return starts\n\n\n                \n    def largestRectangleArea(self, heights: List[int]) -> int:\n        starts = self.get_starts(heights)\n        ends = self.get_ends(heights)\n        # print(heights)\n        # print(starts)\n        # print(ends)\n        ans = -float('inf')\n        for i in range(len(heights)):\n            ans = max(ans,(ends[i]-starts[i]-1)*heights[i])\n        # ans = max([(end - start - 1)*heights[i] for i,(start,end) in enumerate(zip(starts,ends))])\n\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram"}