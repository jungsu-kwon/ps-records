{"id":372289708,"lang":"python3","time":"1Â year","timestamp":1595853813,"status_display":"Accepted","runtime":"1784 ms","url":"/submissions/detail/372289708/","is_pending":"Not Pending","title":"Path Sum III","memory":"14.3 MB","code":"class Solution():\n    def pathSum(self,root,target):\n        if root == None : \n            return 0\n        self.visited,self.queue = set([root]),[[node,target-root.val] for node in [root.left,root.right] if node != None]\n        self.count = int(root.val == target)\n        while self.queue :\n            node,val =  self.queue.pop(0)\n            if not node in self.visited : \n                if node.val == target : \n                    self.count += 1 \n                self.visited.add(node)\n                self.queue.extend([[child,target-node.val] for child in [node.left,node.right] if child != None])\n            if val == node.val : \n                self.count += 1 \n            self.queue.extend([[child,val-node.val] for child in [node.left,node.right] if child != None])\n        return self.count\n            \n\n             \n\n                \n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}