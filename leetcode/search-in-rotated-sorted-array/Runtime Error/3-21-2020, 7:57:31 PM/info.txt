{"id":314426235,"lang":"python3","time":"1 year, 4 months","timestamp":1584788251,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/314426235/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution():\n    def search(self,nums,target):\n        import math\n        import bisect\n        if not nums : \n            return -1\n        elif len(nums) == 1 :\n            if target != nums[0]:\n                return -1\n            else :\n                return 0 \n        n = len(nums)\n\n        low,high = 0,n-1\n        while low <= high : \n            m = int(math.floor((low+high)/2))\n            if nums[m] > nums[m+1] : \n                break\n            elif nums[m] > nums[0]:\n                low = m + 1 \n            else : \n                high = m-1\n        def search(a, x,offset=0):\n            i = bisect.bisect_right(a, x)\n            if i != len(a) + 1 and a[i-1] == x:\n               return i-1 + offset\n            else:\n               return -1\n        if not nums[m] > nums[m+1]:\n            return search(nums,target)\n        if target >= nums[0] : \n            return search(nums[:m+1],target)\n        else:\n            return search(nums[m+1:],target,offset=m+1)\n        return -1 ","compare_result":"1111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array"}