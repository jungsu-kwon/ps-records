{"id":495952780,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621545011,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/495952780/","is_pending":"Not Pending","title":"Path Sum","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool is_leaf(TreeNode* root)\n    {\n        return !root->left && !root -> right;\n    }\npublic:\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if (!root) return false;\n        if (is_leaf(root)) return root -> val == targetSum;\n        auto new_target = targetSum - root -> val;\n        return hasPathSum(root->left, new_target) || hasPathSum(root->right, new_target);\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum"}