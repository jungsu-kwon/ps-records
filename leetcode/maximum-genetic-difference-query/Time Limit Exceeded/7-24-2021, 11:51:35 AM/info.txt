{"id":527319836,"lang":"python3","time":"1 week, 3 days","timestamp":1627095095,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/527319836/","is_pending":"Not Pending","title":"Maximum Genetic Difference Query","memory":"N/A","code":"from typing import List, Dict, Tuple\n\nclass Solution:\n    def getQuery(self,cache: Dict[Tuple[int,int],int],\n                 parents: List[int], \n                 query: Tuple[int,int]) -> int:\n\n        if query[0] == -1:\n            return 0\n\n        if tuple(query) in cache:\n            return cache[tuple(query)]\n\n        node: int = query[0]\n        val: int = query[1]\n        diff: int = 0\n\n        newQuery: Tuple[int,int] = (parents[node], val)\n        diff = max(val ^ node, \n                    self.getQuery(cache,parents,newQuery))\n        cache[tuple(query)] = diff\n\n        return diff\n\n\n    def maxGeneticDifference(self, parents: List[int], queries: List[List[int]]) -> List[int]:\n        '''\n        parents = [3,7,-1,2,0,7,0,2], queries = [[4,6],[1,15],[0,5]]\n        expected output : [6,14,7]\n        '''\n\n        cache: Dict[Tuple[int,int],int] = {}\n        ans: List[int] = []\n        for query in queries:\n            ans.append(self.getQuery(cache,parents,query))\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111100000000","title_slug":"maximum-genetic-difference-query"}