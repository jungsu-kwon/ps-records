{"id":304824111,"lang":"python3","time":"1 year, 5 months","timestamp":1582112637,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/304824111/","is_pending":"Not Pending","title":"Triangle","memory":"13.5 MB","code":"class Solution:\n    def minimumTotal(self, triangle) :\n        self.num_rows = len(triangle)\n        if triangle == [[]]:\n            return  \n\n        #self.prev = [0 for i in range(self.num_rows)]\n        self.dp = [0 for i in range(self.num_rows)]\n\n        self.dp[0] = triangle[0][0]\n\n        for i in range(1,self.num_rows):\n            prev = self.dp[0]\n            #print('dp before loop {}'.format(self.dp))\n            for ind,val in enumerate(self.dp[:i]) : \n                #print('ind {} val {} prev {} tri {} computed {}'.format(ind,val,prev,triangle[i][ind],val+min(prev,triangle[i][ind])))\n                self.dp[ind] = triangle[i][ind] + min(prev,val)\n                prev = val\n            self.dp[i] = prev + triangle[i][i]\n        return min(self.dp)\n\n\n\n","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle"}