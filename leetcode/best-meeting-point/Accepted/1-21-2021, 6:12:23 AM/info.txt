{"id":445615011,"lang":"python3","time":"6 months, 2 weeks","timestamp":1611177143,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/445615011/","is_pending":"Not Pending","title":"Best Meeting Point","memory":"14.6 MB","code":"class Solution:\n    def minTotalDistance(self, grid: List[List[int]]) -> int:\n      \n        rows=[]  \n        cols=[]\n        \n        m= len(grid)\n        n= len(grid[0])\n        \n        for row in range(m):\n            for col in range(n):\n                if grid[row][col]==1:\n                    rows.append(row)     \n                    cols.append(col)\n        rows.sort()\n        cols.sort()\n        print(rows)\n        rows_med= rows[len(rows)//2]\n        cols_med= cols[len(cols)//2]\n        \n        row_sum= sum(abs(rows_med-row) for  row in rows)\n        col_sum= sum(abs(cols_med-col) for col in cols) \n        return row_sum + col_sum","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"best-meeting-point"}