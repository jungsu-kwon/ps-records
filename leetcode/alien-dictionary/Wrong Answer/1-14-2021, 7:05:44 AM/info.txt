{"id":442616282,"lang":"python3","time":"6 months, 3 weeks","timestamp":1610575544,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/442616282/","is_pending":"Not Pending","title":"Alien Dictionary","memory":"N/A","code":"class Solution:\n    def getChar(self,word,i):\n        if i >= len(word):\n            return None\n        return word[i]\n    def samePrefix(self,word1,word2,i):\n        return word1[:i] == word2[:i]\n    def alienOrder(self, words):\n        ansList = []\n        maxiLen = max([len(word) for word in words])\n        unknowns = []\n        for i in range(maxiLen):\n            chars = [self.getChar(word,i) for word in words]\n            prevWordIndex,prevIndex = None,-1\n            for j,char in enumerate(chars):\n                if char and char not in ansList:\n\n                    if prevWordIndex is None or self.samePrefix(words[prevWordIndex],words[j],i):\n                        ansList.insert(prevIndex+1,char)\n                        prevIndex += 1\n                    else:\n                        unknowns.append(char)\n                else:\n                    orderIndex = ansList.index(char) if char else -2\n                    if prevWordIndex is not None  and  self.samePrefix(words[prevWordIndex],words[j],i):\n                        if orderIndex < prevIndex:\n                            return ''\n                    prevIndex = orderIndex\n                prevWordIndex = j\n        ansList += unknowns\n        return ''.join(ansList)\n\n","compare_result":"01111110111111111110001010011100111111011011111111101101111011111011111100100111011101110111100100111111101111011111111011","title_slug":"alien-dictionary"}