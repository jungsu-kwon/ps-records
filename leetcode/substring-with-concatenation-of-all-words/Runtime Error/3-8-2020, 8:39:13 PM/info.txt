{"id":310535848,"lang":"python3","time":"1 year, 4 months","timestamp":1583667553,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/310535848/","is_pending":"Not Pending","title":"Substring with Concatenation of All Words","memory":"N/A","code":"class Solution:\n    def findSubstring(self, s, words):\n        from collections import Counter\n        num_words = len(words)\n        len_str = len(s)\n        len_word = len(words[0])\n        # basic validity check or corner cases\n        if num_words == 0 or len_str == 0 or len_word == 0 : \n            return []\n        counter = Counter()\n        \n        \n        for i,word in enumerate(words) : \n            counter[word] += 1 \n        num_words_unique = len(counter)\n\n        counter_note = Counter()\n        count = 0 \n        ans = [] \n        for start in range(len_word):\n            counter_note = Counter()\n            count = 0 \n            prev = \"\"\n            for i in range(start,len_str,len_word):\n                prev_start = i - (num_words)*len_word\n                if prev_start >= 0 :  \n                    prev = s[prev_start:prev_start+len_word]\n                    if prev in counter : \n                        if counter[prev] == counter_note[prev] : \n                            count -= 1 \n                        elif counter[prev] == counter_note[prev] + 1  : \n                            count -= 1 \n                        counter_note[prev] -= 1 \n                end = i + len_word\n                cur = s[i:end]\n                if cur in counter : \n                    counter_note[cur] += 1 \n                    if counter_note[cur] == counter[cur] : \n                        count += 1 \n                if count == num_words_unique : \n                    ans.append(i-(num_words-1)*len_word)\n        return ans\n\n","compare_result":"11111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"substring-with-concatenation-of-all-words"}