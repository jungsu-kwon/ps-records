{"id":442621222,"lang":"python3","time":"6 months, 3 weeks","timestamp":1610576603,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/442621222/","is_pending":"Not Pending","title":"Encode and Decode Strings","memory":"14.7 MB","code":"class Codec:\n    def encode(self, strs: [str]) -> str:\n        \"\"\"Encodes a list of strings to a single string.\n        \"\"\"\n        if not strs:\n            return ''\n        lens = ','.join([str(len(str_)) for str_ in strs]) + '/'\n        concat = ''.join(strs)\n        return lens + concat\n        \n    def splitIntoStrings(self,lens,concat):\n        startIndex = 0\n        strings = []\n        for len_ in lens:\n            strings.append(concat[startIndex:startIndex+len_])\n            startIndex += len_\n        return strings\n            \n            \n    def decode(self, s: str) -> [str]:\n        \"\"\"Decodes a single string to a list of strings.\n        \"\"\"\n        if not s:\n            return []\n        splitIndex = s.find('/')\n        lens = [int(len_) for len_ in s[:splitIndex].split(',')]\n\n        concat = s[splitIndex+1:]\n\n        return self.splitIntoStrings(lens,concat)\n        \n        \n\n\n# Your Codec object will be instantiated and called as such:\n# codec = Codec()\n# codec.decode(codec.encode(strs))","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"encode-and-decode-strings"}