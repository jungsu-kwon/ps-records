{"id":396753602,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1600294622,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/396753602/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"\n\nclass Solution {\nprivate : \n\tbool search(TreeNode* root,int target,std::vector<TreeNode*> &path){\n\t\tif (root == nullptr) return false;\n\t\tif (root->val == target || search(root->left,target,path) || search(root->right,target,path))\n\t\t{\n\t\t\tpath.push_back(root);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\npublic:\n\tTreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n\t\tstd::vector<TreeNode*> pPath;\n\t\tstd::vector<TreeNode*> qPath;\n\t\tsearch(root,p->val,pPath);\n\t\tsearch(root,q->val,qPath);\n\n\t\tauto qIt = qPath.rbegin();\n\t\tauto pIt = pPath.rbegin();\n\t\tTreeNode* prevNode = *qIt;\n\n\t\twhile (*pIt == *qIt){\n\t\t\tprevNode = *qIt;\n\t\t\t++pIt;\n\t\t\t++qIt;\n\t\t}\n\n\n\t\treturn prevNode;\n\t}\n};\n","compare_result":"1000000000000000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-tree"}