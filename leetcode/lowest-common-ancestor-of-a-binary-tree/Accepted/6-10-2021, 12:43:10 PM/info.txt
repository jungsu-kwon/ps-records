{"id":505727495,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1623296590,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/505727495/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"20.5 MB","code":"#include <unordered_set>\nusing namespace std;\n// struct TreeNode {\n//     int val;\n//     TreeNode *left;\n//     TreeNode *right;\n//     // TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n// };\n \nclass Solution {\nprivate:\n    bool find_node(TreeNode* root, int val,unordered_set<int>& hash)\n    {\n        if (!root) return root;\n        if (root -> val == val)\n            hash.insert(root->val);\n\n        else if (find_node(root->left,val,hash))\n        {\n            hash.insert(root->left->val);\n            hash.insert(root->val);\n        }\n\n        else if (find_node(root->right,val,hash))\n        {\n            hash.insert(root->right->val);\n            hash.insert(root->val);\n        }\n\n        return hash.find(root->val) != hash.end();\n    }\n    bool in_hash(unordered_set<int>& hash, TreeNode* node)\n    {\n        if (!node) return false;\n        return hash.find(node->val) != hash.end();\n    }\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        unordered_set<int> hash_q;\n        unordered_set<int> hash_p;\n\n        if (!root) return root;\n        find_node(root,p->val,hash_p);\n        find_node(root,q->val,hash_q);\n\n        auto cur_node = root;\n        while (cur_node)\n        {\n            // auto p_root  = in_hash(hash_p,cur_node);\n            auto p_left  = in_hash(hash_p,cur_node->left);\n            auto p_right = in_hash(hash_p,cur_node->right);\n\n            // auto q_root  = in_hash(hash_q,cur_node);\n            auto q_left  = in_hash(hash_q,cur_node->left);\n            auto q_right = in_hash(hash_q,cur_node->right);\n\n\n            if (p_left && q_left)\n                cur_node = cur_node -> left;\n            else if (p_right && q_right)\n                cur_node = cur_node -> right;\n            else return cur_node;\n        }\n        return nullptr;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}