{"id":314641702,"lang":"python3","time":"1 year, 4 months","timestamp":1584839902,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/314641702/","is_pending":"Not Pending","title":"Combination Sum","memory":"16.8 MB","code":"class Solution():\n    def combinationSum(self,candidates,target):\n        self.combinations = {}\n        self.cands = candidates  \n        res = self.helper(target)\n        ret = list(set([tuple(sorted(res_)) for res_ in res]))\n        return ret \n    def helper(self,target):\n        if target in self.combinations : \n            return self.combinations[target]\n        ret = []\n        if target <=0 : \n            return ret\n        for cand in self.cands :\n            if cand < target : \n                dp_res = self.helper(target-cand)\n                ret += [(cand,) + res for res in dp_res]\n            elif cand == target : \n                ret += [(cand,)]\n        self.combinations[target] = ret \n        return ret\n        \n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}