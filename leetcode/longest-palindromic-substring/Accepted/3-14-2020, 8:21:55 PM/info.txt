{"id":312307831,"lang":"python3","time":"1 year, 4 months","timestamp":1584184915,"status_display":"Accepted","runtime":"1204 ms","url":"/submissions/detail/312307831/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"13 MB","code":"class Solution:\n    def longestPalindrome(self, s):\n        list_str = list(s)\n        n = len(list_str)\n        if n == 0 : \n            return '' \n        elif n == 1 : \n            return s[0]\n        \n        #note_char_center = [0 for i in range(n)]\n        #note_space_center = [0 for i in range(n-1)]\n        maxi = 1 \n        cand = (0,0) \n        \n        # for char centre  \n        for i in range(n) : \n            max_char = max(min(i,n-1-i),0)\n            for j in range(max_char) : \n                left,right = list_str[i-j-1],list_str[i+j+1]\n                if left != right : \n                    break\n                elif left == right : \n                    len_substr = 2*j + 3 \n                    if len_substr > maxi : \n                        maxi= len_substr\n                        cand = (i-j-1,i+j+1)\n\n\n        # for space_center \n        for i in range(n-1):\n            max_char = max(min(i+1,n-i-1),0)\n            for j in range(max_char) : \n                left,right = list_str[i-j],list_str[i+j+1]\n                if left != right : \n                    break\n                else : \n                    len_substr = 2*j+2\n                    if len_substr > maxi : \n                        maxi = len_substr\n                        cand = (i-j,i+j+1)\n\n        return ''.join(list_str[cand[0]:cand[1]+1])\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}