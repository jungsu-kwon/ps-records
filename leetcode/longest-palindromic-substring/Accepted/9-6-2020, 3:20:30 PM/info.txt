{"id":391715358,"lang":"cpp","time":"11Â months","timestamp":1599373230,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/391715358/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"22.4 MB","code":"\nclass Solution {\nprivate : \n    std::string helper(const string &s,int l,int r ){\n        while(l >=0 && r < s.size() && s[r] == s[l]){\n            //std::cout << s[r] << \" \" << s[l] << \" \" << s.substr(l,r-l+1) << std::endl;\n            ++r;--l;\n        }\n        return s.substr(l+1,r-l-1);\n    }\npublic:\n    string longestPalindrome(string s) {\n        std::string maxPalin = \"\";\n        std::string curPalinOdd = \"\";\n        std::string curPalinEven = \"\";\n        std::string curPalin = \"\";\n        for (auto t = 0 ; t < s.size(); ++t){\n            curPalinEven = helper(s,t,t+1);\n            curPalinOdd = helper(s,t,t);\n            //std::cout << \"CurPalinEven : \"  << curPalinEven << \" curPalinOdd \" << curPalinOdd << std::endl;\n            curPalin = (curPalinEven.size() > curPalinOdd.size()) ? curPalinEven : curPalinOdd;\n            maxPalin = (maxPalin.size() > curPalin.size()) ? maxPalin : curPalin;\n        }\n        return maxPalin;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}