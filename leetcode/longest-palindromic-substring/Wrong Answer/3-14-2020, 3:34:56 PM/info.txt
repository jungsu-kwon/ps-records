{"id":312262131,"lang":"python3","time":"1 year, 4 months","timestamp":1584167696,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/312262131/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s):\n        n = len(s)\n        if n == 0 : \n            return ''\n        elif n == 1 : \n            return s[0]\n        input_str = list(s)\n        dp = [1 for i in range(n)]\n        dp_same = [1 for i in range(n)]\n        dp[0] = 1\n        maxi = 0\n        cand = input_str[0]\n        for i in range(1,n):\n            cur = input_str[i]\n            # first calc first type :\n            to_check = i - 1 - dp[i-1]\n            if to_check >= 0 : \n                if input_str[to_check] == cur : \n                    dp[i] = dp[i-1] + 2 \n            # start over \n            if i >= 2 and input_str[i-2] == cur :  \n                dp[i] = max(dp[i],3 )\n            # from same dp\n            if input_str[i-1] == cur : \n                dp[i] = max(dp[i],dp_same[i-1]+1)\n\n\n            # secondly calc second type all same\n            to_check = i - 1 \n            if cur == input_str[i-1] : \n                dp_same[i] = dp_same[i-1]+1\n\n            # update cand and max\n            if maxi < dp[i] : \n                cand = input_str[i-dp[i]+1:i+1]\n                maxi = dp[i]\n            if maxi < dp_same[i] : \n                cand = cur * dp_same[i]\n                maxi = dp_same[i]\n        return ''.join(cand)\n","compare_result":"1111111111111111111111111111111110111111111111111111111111111111111111111111111111111111101111111111011","title_slug":"longest-palindromic-substring"}