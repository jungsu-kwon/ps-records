{"id":312304918,"lang":"python3","time":"1 year, 4 months","timestamp":1584183610,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/312304918/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s):\n        list_str = list(s)\n        n = len(list_str)\n        if n == 0 : \n            return '' \n        elif n == 1 : \n            return s[0]\n        \n        #note_char_center = [0 for i in range(n)]\n        #note_space_center = [0 for i in range(n-1)]\n        maxi = -1 \n        cand = ''\n        \n        # for char centre  \n        for i in range(n) : \n            max_char = min(i-1,n-1-i)\n            for j in range(max_char) : \n                left,right = list_str[i-j-1],list_str[i+j+1]\n                if left != right : \n                    #note_char_center[i] = 2*j+1\n                    if maxi < 2*j + 1 :\n                        maxi = 2*j + 1 \n                        cand = list_str[i-j:i+j+1]\n                    break\n\n        # for space_center \n        for i in range(n-1):\n            max_char = min(i+1,n-i-1)\n            for j in range(max_char) : \n                left,right = list_str[i-j],list_str[i+j]\n                if left != right : \n                    #note_space_center[i] = 2*(j+1)\n                    if 2*(j+1) > maxi : \n                        maxi = 2*j \n                        cand = list_str[i-j+1:i+j]\n                    break\n        return ''.join(cand)\n\n\n","compare_result":"0011000000000000001000000000000010001000011111011101101111011001101011000100111110111101000000000000000","title_slug":"longest-palindromic-substring"}