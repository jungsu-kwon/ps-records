{"id":505683470,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1623288815,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/505683470/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"17.7 MB","code":"#include <iostream>\n#include <vector>\n\n\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        // if root is nullptr return root\n        if (!root) return root;\n\n        vector<Node*> bfs;\n        bfs.push_back(root);\n\n        while (bfs.size())\n        {\n            vector<Node*> children;\n            Node* prev = nullptr;\n            for (int i = 0; i < bfs.size(); ++i)\n            {\n                auto node = bfs[i];\n                auto left_child = node -> left;\n                auto right_child = node -> right;\n\n                if (prev) prev -> next = left_child;\n                if (left_child) \n                {\n                    left_child -> next = right_child;\n                    prev = left_child;\n                    children.push_back(left_child);\n                }\n                if (right_child) \n                {\n                    prev = right_child;\n                    children.push_back(right_child);\n                }\n            }\n            bfs = children;\n        }\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node"}