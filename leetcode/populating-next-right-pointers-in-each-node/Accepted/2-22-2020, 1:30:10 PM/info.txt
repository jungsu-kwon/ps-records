{"id":305633958,"lang":"python3","time":"1 year, 5 months","timestamp":1582345810,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/305633958/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"14 MB","code":"# Definition for a Node.\nclass Node:\n    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.next = next\n        \nclass Solution:\n    def connect(self, root: 'Node') -> 'Node':\n        if root == None : \n            return None \n        from collections import deque\n        self.queue = deque([root])\n        \n        while (True) : \n            prev = None \n            for elem in self.queue :  \n                if prev != None :\n                    prev.next = elem \n                prev = elem \n            n = len(self.queue)\n            for i in range(n):\n                elem = self.queue.popleft()\n                if elem.left != None : \n                    self.queue.append(elem.left)\n                    self.queue.append(elem.right)\n                elif elem.left == None : \n                    return root \n                    \n                    \n                    \n                ","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node"}