{"id":445621444,"lang":"python3","time":"6 months, 2 weeks","timestamp":1611178438,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/445621444/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"20.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def helper(self,root):\n        if not root : \n            return 0\n        \n        leftNode,leftLen = root.left,self.helper(root.left)\n        rightNode,rightLen = root.right,self.helper(root.right)\n\n        seqLen = 1\n        if leftNode and leftNode.val == root.val + 1:\n            seqLen = leftLen + 1\n        if rightNode and rightNode.val == root.val + 1:\n            seqLen = max(seqLen,rightLen + 1)\n\n        self.maxLen = max(self.maxLen,seqLen)\n        return seqLen\n\n\n    def longestConsecutive(self, root: TreeNode) -> int:\n        if not root:\n            return 0\n\n        self.maxLen = 0 \n        self.helper(root)\n\n        return self.maxLen\n\n            \n        ","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence"}