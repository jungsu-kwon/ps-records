{"id":374895672,"lang":"python3","time":"1Â year","timestamp":1596364060,"status_display":"Accepted","runtime":"832 ms","url":"/submissions/detail/374895672/","is_pending":"Not Pending","title":"Palindromic Substrings","memory":"22.6 MB","code":"class Solution:\n    def countSubstrings(self,s):\n        n = len(s)\n        self.s = s \n        if n == 0 : \n            return 0 \n        self.dp = [[-1 for i in range(n)] for i in range(n)]\n        for i in range(n) : \n            self.dp[i][i] = 1 \n        count = 0 \n        for i in range(n) : \n            for j in range(i,n) : \n                if self.isPalindrome(i,j) : \n                    count += 1 \n        return count \n\n\n    def isPalindrome(self,l,r):\n        if self.dp[l][r] != -1 : \n            return self.dp[l][r]\n        if self.s[l] == self.s[r] : \n            self.dp[l][r] =  self.isPalindrome(l+1,r-1) if l+1 < r-1 else 1\n        else : \n            self.dp[l][r] = 0\n        return self.dp[l][r]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindromic-substrings"}