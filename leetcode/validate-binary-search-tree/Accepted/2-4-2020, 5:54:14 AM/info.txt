{"id":299957723,"lang":"python3","time":"1 year, 6 months","timestamp":1580763254,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/299957723/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"15.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\ndef helper(root) : \n    if root == None :\n        return True,-1,-1\n    \n    if root.left == None : \n        mini = root.val\n    else : \n        valid_l,mini_l,maxi_l = helper(root.left)\n        if not valid_l : \n            return False,-1,-1\n        if maxi_l < root.val : \n            mini = mini_l\n        else :\n            return False,-1,-1\n            \n    if root.right == None : \n        maxi = root.val\n    else : \n        valid_r,mini_r,maxi_r = helper(root.right)\n        if not valid_r : \n            return False,-1,-1\n        if mini_r > root.val : \n            maxi = maxi_r\n        else : \n            return False,-1,-1\n    return True,mini,maxi\n            \n        \n        \n    \n        \n\nclass Solution:\n    def isValidBST(self, root: TreeNode) -> bool:\n        ans,_,_ = helper(root)\n        return ans\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}