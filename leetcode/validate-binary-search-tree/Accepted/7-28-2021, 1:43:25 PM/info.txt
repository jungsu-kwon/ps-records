{"id":529454692,"lang":"python3","time":"6 days, 3 hours","timestamp":1627447405,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/529454692/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"16.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def helper(self,\n        root: TreeNode, \n        mini: int = None,\n        maxi: int = None\n    ) -> bool:\n        if not root: return True\n        if mini is not None and root.val <= mini: return False\n        if maxi is not None and root.val >= maxi: return False\n        \n        leftMax: int = min(maxi,root.val) if maxi else root.val\n        leftMin: int = mini\n\n        rightMax: int = maxi\n        rightMin: int = max(mini,root.val) if mini else root.val\n\n        # print(rightMax,rightMin)\n        return (self.helper(root.left,mini=leftMin,maxi=leftMax) and \n            self.helper(root.right,mini=rightMin,maxi=rightMax))\n\n\n    def isValidBST(self, root: TreeNode) -> bool:\n        return self.helper(root,mini=None,maxi=None)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}