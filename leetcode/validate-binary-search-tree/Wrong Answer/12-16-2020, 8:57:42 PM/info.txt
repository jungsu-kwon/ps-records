{"id":431249938,"lang":"python3","time":"7 months, 2 weeks","timestamp":1608119862,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/431249938/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def helper(self,root,min_val=None,max_val=None):\n        if not root : \n            return True\n        if min_val and root.val <= min_val : \n            return False\n        if max_val and root.val >= max_val:\n            return False\n\n        left_max = min(max_val,root.val) if max_val  else root.val\n        if not self.helper(root.left,min_val=min_val,max_val=left_max):\n            return False\n\n        right_min = max(min_val,root.val) if min_val else root.val\n        if not self.helper(root.right,min_val=right_min,max_val=max_val):\n            return False\n        return True\n\n    def isValidBST(self, root: TreeNode) -> bool:\n        return self.helper(root)\n        \n\n        ","compare_result":"11111110011111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}