{"id":523135506,"lang":"python3","time":"2 weeks, 4 days","timestamp":1626381565,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/523135506/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"15.4 MB","code":"from typing import List\n\nclass Solution:\n    def searchBound(self,nums: List[int], target: int, findLowerBound: bool = True) -> int:\n        left: int = 0\n        right: int = len(nums) - 1 \n\n        while (left <= right):\n            mid = (left + right) // 2\n            if nums[mid] < target:\n                left = mid + 1\n            elif nums[mid] > target:\n                right = mid - 1\n            # nums[mid] == target\n            elif findLowerBound:\n                if mid == 0 or nums[mid] > nums[mid - 1]:\n                    return mid\n                right = mid - 1\n            else:\n                if mid == len(nums) - 1 or nums[mid] < nums[mid + 1]:\n                    return mid\n                left = mid + 1\n        return -1\n\n\n\n\n\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        lowerBound: int = self.searchBound(nums,target,findLowerBound=True)\n        if lowerBound == -1:\n            return [-1,-1]\n        upperBound: int = self.searchBound(nums,target,findLowerBound=False)\n        return [lowerBound,upperBound]\n\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}