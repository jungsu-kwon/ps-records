{"id":522702314,"lang":"python3","time":"2 weeks, 5 days","timestamp":1626312477,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/522702314/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"from typing import List\nclass Solution:\n    def findBound(self,nums: List[int],target: int, lowerBound=True) -> int:\n        left: int = 0\n        right: int = len(nums) - 1\n\n        while (left <= right):\n            mid: int = (left + right) // 2\n            if nums[mid] < target:\n                left = mid + 1\n\n            elif nums[mid] > target:\n                right = mid - 1\n\n            # nums[mid] == target\n            elif lowerBound:\n                if mid == left or nums[mid - 1] < target:\n                    return mid\n                right = mid - 1\n\n            # nums[mid] == target\n            else:\n                if mid == left or nums[mid + 1] > target:\n                    return mid\n                left = mid + 1\n\n        return -1\n\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        lowerBound: int = self.findBound(nums,target,True)\n        if lowerBound == -1:\n            return [-1,-1]\n        upperBound: int = self.findBound(nums,target,False)\n        return [lowerBound,upperBound]\n\n","compare_result":"1111111011111111111111111110111110111111110101111000111111111111111010111011111100001111","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}