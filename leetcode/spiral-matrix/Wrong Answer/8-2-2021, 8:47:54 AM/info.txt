{"id":531821572,"lang":"python3","time":"1 day, 8 hours","timestamp":1627861674,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/531821572/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"N/A","code":"from typing import List\nclass Solution:\n    def helper(self,matrix: List[List[int]], \n        leftTop: Tuple[int], \n        rightBot: Tuple[int]) -> List[int]:\n        i1,j1 = leftTop\n        i2,j2 = rightBot\n        if i1 > i2 or  j1 > j2: return []\n        if i1 == i2: return matrix[i1][j1:j2+1]\n        ans: List[int] = []\n        ans += matrix[i1][j1:j2+1]\n        ans += [matrix[i][j2] for i in range(i1+1,i2+1)]\n        ans += [matrix[i2][j] for j in range(j2-1,j1-1,-1)]\n        ans += [matrix[i][j1] for i in range(i2-1,i1,-1)]\n        ans += self.helper(matrix,[i1+1,j1+1],[i2-1,j2-1])\n        return ans\n\n\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        numRows: int = len(matrix)\n        numCols: int = len(matrix[0])\n        return self.helper(matrix,[0,0],[numRows-1,numCols-1])\n        ","compare_result":"11111101111011101111111","title_slug":"spiral-matrix"}