{"id":404265933,"lang":"cpp","time":"10Â months","timestamp":1601791842,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/404265933/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"7.2 MB","code":"#include <vector>\nusing namespace std;\nclass Solution {\nprivate :\n\tvoid helper(vector<vector<int>> &matrix,vector<int> &vecAns,int l, int r, int up, int down,int ind)\n\t{\n\n\n\t\tif (l > r || up > down) return;\n\t\telse if (l == r ){\n\t\t\tfor (auto i = up; i != down+1; ++i){\n\t\t\t\tvecAns[ind] = matrix[i][l];\n\t\t\t\tind += 1 ;\n\t\t\t}\n\t\t}\n\t\telse if (up == down){\n\t\t\tfor (auto j = l; j != r + 1; ++j){\n\t\t\t\tvecAns[ind] = matrix[up][j];\n\t\t\t\tind += 1;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (auto j = l; j < r+1; ++j)\n\t\t\t{\n\t\t\t\tvecAns[ind] = matrix[up][j];\n\t\t\t\tind += 1;\n\t\t\t}\n\t\t\tfor (auto i = up+1; i < down+1; ++i){\n\t\t\t\tvecAns[ind] = matrix[i][r];\n\t\t\t\tind += 1;\n\t\t\t}\n\n\t\t\tfor (auto j = r-1; j >= l; --j){\n\t\t\t\tvecAns[ind] = matrix[down][j];\n\t\t\t\tind +=1 ;\n\t\t\t}\n\n\t\t\tfor (auto i = down-1; i > up ; --i){\n                vecAns[ind] = matrix[i][l];\n\t\t\t\tind += 1 ;\n\t\t\t}\n\t\t\thelper(matrix,vecAns,l+1,r-1,up+1,down-1,ind);\n\n\t\t}\n\n\n\t\t\n\n\t}\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n\t\tif (!matrix.size() || !matrix[0].size()) return std::vector<int>{};\n\t\tauto l = 0, up = 0;\n\t\tauto r = matrix[0].size()-1, down = matrix.size()-1;\n\t\tstd::vector<int> vecAns(matrix.size() * matrix[0].size(),0);\n\t\tauto ind = 0 ;\n\n\t\thelper(matrix,vecAns,l,r,up,down,ind);\n\t\treturn vecAns;\n    }\n};\n","compare_result":"1111111111111111111111","title_slug":"spiral-matrix"}