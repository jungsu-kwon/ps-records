{"id":493720181,"lang":"cpp","time":"2Â months, 2Â weeks","timestamp":1621128805,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/493720181/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if (head == nullptr)\n            return nullptr;\n\n        ListNode even_head = ListNode();\n\n        auto even = &even_head;\n        auto odd =  head;\n\n        auto cur_node = head;\n\n        auto is_even = false;\n        while (cur_node != nullptr)\n        {\n            if (is_even)\n            {\n                odd  -> next = cur_node -> next;\n                even -> next = cur_node;\n                even = cur_node;\n            }\n            else\n            {\n                odd = cur_node;\n            }\n            is_even = !is_even;\n            cur_node = cur_node -> next;\n        }\n        odd  -> next = even_head.next;\n        even -> next = nullptr;\n        \n        return head;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list"}