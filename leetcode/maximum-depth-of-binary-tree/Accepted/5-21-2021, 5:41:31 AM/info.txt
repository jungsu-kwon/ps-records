{"id":495943797,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621543291,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/495943797/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.8 MB","code":"using namespace std;\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (!root) return 0;\n        return max(maxDepth(root->left), maxDepth(root->right)) + 1;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}