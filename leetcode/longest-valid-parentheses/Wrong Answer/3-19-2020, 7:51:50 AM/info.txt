{"id":313714483,"lang":"python3","time":"1 year, 4 months","timestamp":1584571910,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/313714483/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"N/A","code":"class Solution():\n    def longestValidParentheses(self,s):\n        if not s or len(s) == 1 : \n            return len(s)\n        n = len(s)\n        dp = [0 for i in range(n+1)]\n        maxi = 0\n        for i in range(n):\n            cur = s[i]\n            prev = 0 \n            for j in range(n):\n                if j == 0 : \n                    prev = dp[j]\n                    dp[j] = (dp[j+1]+1)*(dp[j+1]>0) if cur == ')' else 0 \n                    if dp[j] > maxi : \n                        maxi = dp[j]\n                else : \n                    temp = dp[j]\n                    dp[j] = (dp[j+1] + 1)*(dp[j+1]>0 ) if cur == ')' else (prev + 1)*(prev > 0 or j == 1)\n                    prev = temp\n        return maxi\n","compare_result":"11100111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000","title_slug":"longest-valid-parentheses"}