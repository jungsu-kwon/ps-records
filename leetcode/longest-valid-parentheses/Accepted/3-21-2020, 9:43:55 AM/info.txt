{"id":314309089,"lang":"python3","time":"1 year, 4 months","timestamp":1584751435,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/314309089/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"13 MB","code":"class Solution():\n    def longestValidParentheses(self,s):\n        if not s or len(s) == 1 : \n            return 0\n        maxi,n = 0,len(s)\n        dp = [0 for i in range(n)]\n        for i in range(1,n):\n            cur = s[i]\n            back = cur == ')'\n            if back : \n                if dp[i-1] == 0 and s[i-1] == '(' : \n                    dp[i] = 2 if i < 2 else 2 + dp[i-2]\n                elif dp[i-1] != 0 : \n                    dp[i] = dp[i-1] + 2 if (i-dp[i-1] -1>=0 and s[i-dp[i-1] -1] == '(') else 0\n                if dp[i] > 0 and i-dp[i] >=0 and  dp[i-dp[i]] >0: \n                    dp[i] += dp[i-dp[i]]\n                maxi = max(dp[i],maxi)\n                \n        return maxi","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}