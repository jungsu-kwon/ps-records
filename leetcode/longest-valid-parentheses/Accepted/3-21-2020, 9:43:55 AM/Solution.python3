// https://leetcode.com/problems/longest-valid-parentheses

class Solution():
    def longestValidParentheses(self,s):
        if not s or len(s) == 1 : 
            return 0
        maxi,n = 0,len(s)
        dp = [0 for i in range(n)]
        for i in range(1,n):
            cur = s[i]
            back = cur == ')'
            if back : 
                if dp[i-1] == 0 and s[i-1] == '(' : 
                    dp[i] = 2 if i < 2 else 2 + dp[i-2]
                elif dp[i-1] != 0 : 
                    dp[i] = dp[i-1] + 2 if (i-dp[i-1] -1>=0 and s[i-dp[i-1] -1] == '(') else 0
                if dp[i] > 0 and i-dp[i] >=0 and  dp[i-dp[i]] >0: 
                    dp[i] += dp[i-dp[i]]
                maxi = max(dp[i],maxi)
                
        return maxi