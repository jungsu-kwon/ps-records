{"id":310867465,"lang":"python3","time":"1 year, 4 months","timestamp":1583752609,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/310867465/","is_pending":"Not Pending","title":"Next Greater Node In Linked List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def nextLargerNodes(self, head: ListNode) -> List[int]:\n        stack = [] \n        cur = head\n        maxi = head.val\n        while cur : \n            stack.append(cur.val)\n            if maxi < cur.val:\n                maxi = cur.val\n            cur = cur.next\n        N = len(stack)\n        dp = [0 for i in range(N)]\n        dp[-1] = 0\n        for i in range(N-2,-1,-1):\n            cur,next_val = stack[i],stack[i+1]\n            if cur < next_val : \n                dp[i] = next_val\n            elif cur== next_val : \n                dp[i] = dp[i+1]\n            else : \n                if cur < maxi : \n                    for ind in range(i+1,N):\n                        if stack[ind] > cur:\n                            dp[i] = stack[ind]\n                            break\n        return dp\n                        \n                    \n                \n            \n            \n             \n\n        \n        \n   ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111000000000","title_slug":"next-greater-node-in-linked-list"}