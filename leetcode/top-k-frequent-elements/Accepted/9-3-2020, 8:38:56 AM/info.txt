{"id":390182947,"lang":"cpp","time":"11Â months","timestamp":1599089936,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/390182947/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"13.9 MB","code":"class Solution {\nprivate: \n    int partition(std::vector<int> &keys,\n                  std::map<int,int> &hash, \n                  int left, \n                  int right, \n                  int pivotIndex){\n\n        // return storeIndex\n        auto pivotValue = hash[keys[pivotIndex]];\n        std::swap(keys[pivotIndex],keys[right]);\n        auto storeIndex = left;\n\n        for (auto t = left; t < right;++t){\n            if (hash[keys[t]] > pivotValue){\n                std::swap(keys[t],keys[storeIndex]);\n                storeIndex += 1 ;\n            }\n        }\n        std::swap(keys[storeIndex],keys[right]);\n        return storeIndex;\n    }\n    void select(std::vector<int> &keys,\n                std::map<int,int> &hash,\n                int left,\n                int right,\n                int k)\n    {\n        if (left == right)\n            return ;\n        auto pivotIndex = (left + right) / 2 ;\n        pivotIndex = partition(keys,hash,left,right,pivotIndex);\n\n        if (pivotIndex == k){\n            return;\n        }\n        else if (k < pivotIndex){\n            select(keys,hash,left,pivotIndex-1,k);\n            return;\n        }\n        else{\n            select(keys,hash,pivotIndex+1,right,k);\n            return;\n        }\n        return;\n    }\n\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n        std::map<int,int> hash ; \n        for (auto num : nums){\n            hash[num] += 1 ;\n        }\n        std::vector<int> keys;\n        for (auto it = hash.begin(); it != hash.end(); ++it){\n            keys.push_back(it->first);\n        }\n        select(keys,hash,0,keys.size()-1,k-1);\n        //for(auto key:keys){\n        //    std::cout << \"key : \" << key << \" : \" <<hash[key] <<std::endl;\n        //}\n        std::vector<int> ans;\n        for (auto t = 0; t < k;++t){\n            ans.push_back(keys[t]);\n        }\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111","title_slug":"top-k-frequent-elements"}