{"id":528392581,"lang":"python3","time":"1Â week, 1Â day","timestamp":1627272892,"status_display":"Accepted","runtime":"1764 ms","url":"/submissions/detail/528392581/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"28.1 MB","code":"class Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        duplicate = 0\n        n = len(nums)\n        bits = n.bit_length()\n        for bit in range(bits):\n            mask = 1 << bit\n            base_count = 0\n            nums_count = 0\n            for i in range(n):\n                # If bit is set in number (i) then add 1 to base_count\n                if i & mask:\n                    base_count += 1\n                    \n                # If bit is set in nums[i] then add 1 to nums_count\n                if nums[i] & mask:\n                    nums_count += 1\n                    \n            # If the current bit is more frequently set in nums than it is in \n            # the range [1, 2, ..., n] then it must also be set in the duplicate number.\n            if nums_count - base_count > 0:\n                duplicate |= mask\n                \n        return duplicate","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number"}