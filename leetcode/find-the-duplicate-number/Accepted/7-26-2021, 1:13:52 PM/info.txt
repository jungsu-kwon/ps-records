{"id":528392229,"lang":"python3","time":"1Â week, 1Â day","timestamp":1627272832,"status_display":"Accepted","runtime":"1016 ms","url":"/submissions/detail/528392229/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"28.3 MB","code":"from collections import defaultdict\nfrom typing import List\n\nclass Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        numSum: int = sum(nums)\n\n        n: int = len(nums) - 1 \n        left: int = 1\n        right: int = n\n\n        while left <= right:\n            mid: int = (left + right) // 2\n            largeCount: int = sum([num >= mid for num in nums])\n\n            if largeCount > (n - mid + 1):\n                duplicate: int = mid\n                left = mid + 1\n\n            else:\n                right = mid - 1\n\n        return duplicate\n","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number"}