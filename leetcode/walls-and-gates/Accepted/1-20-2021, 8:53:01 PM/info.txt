{"id":445454157,"lang":"python3","time":"6 months, 2 weeks","timestamp":1611143581,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/445454157/","is_pending":"Not Pending","title":"Walls and Gates","memory":"16.8 MB","code":"GATE = 0 \nWALL = -1\nINF =  2147483647\nclass Solution:\n    def wallsAndGates(self, rooms: List[List[int]]) -> None:\n        deq = collections.deque([(i, j, 0) for i in range(len(rooms)) for j in range(len(rooms[0])) if rooms[i][j] == 0])\n        row_max = len(rooms) - 1\n        col_max = len(rooms[0]) - 1\n        while deq:\n            row, col, steps = deq.popleft()\n            for new_row, new_col in [(row + 1, col), (row - 1, col), (row, col + 1), (row, col - 1)]:\n                if 0 <= new_row <= row_max and 0 <= new_col <= col_max and rooms[new_row][new_col] == 2147483647:\n                    rooms[new_row][new_col] = steps + 1\n                    deq.append((new_row, new_col, steps + 1))\n\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"walls-and-gates"}