{"id":296589460,"lang":"python3","time":"1 year, 6 months","timestamp":1579731047,"status_display":"Accepted","runtime":"1108 ms","url":"/submissions/detail/296589460/","is_pending":"Not Pending","title":"Walls and Gates","memory":"14.7 MB","code":"class Solution:\n    def valid_children(self,x,y) : \n        if x < 0 or x >= self.w : \n            assert 1==0\n        if y < 0 or y >= self.h:\n            assert 1==0\n        children = [] \n        if x - 1 >= 0  : \n            self.queue.append((x-1,y))\n        if x + 1 < self.w:\n            self.queue.append((x+1,y))\n        if y - 1 >= 0 :\n            self.queue.append((x,y-1))\n        if y + 1 < self.h : \n            self.queue.append((x,y+1))\n            \n\n    def wallsAndGates(self, rooms: List[List[int]]) -> None:\n        \"\"\"\n        Do not return anything, modify rooms in-place instead.\n        \"\"\"\n        if len(rooms) == 0 : \n            return \n        self.h = len(rooms)\n        self.w = len(rooms[0])\n        \n        for y_ in range(self.h):\n            for x_ in range(self.w):\n                cur = rooms[y_][x_]\n                if cur == 0 : # gate\n                    self.queue = [(x_,y_)]\n                    visited = set([])\n                    \n                    step = 0 \n                    while (self.queue) : \n                        size = len(self.queue)\n                        for i in range(size):\n                            node = self.queue.pop(0)\n                            if node in visited : \n                                continue\n                                \n                            x,y = node\n                            cur = rooms[y][x] \n                            \n                            if cur >= step and cur > 0 :\n                                rooms[y][x] = step\n                            if cur == 0 and step == 0 :\n                                self.valid_children(x,y)\n                            elif cur > 0 : \n                                self.valid_children(x,y)\n                            visited.add(node)\n                        step += 1 \n                                \n                            \n                            \n                            \n                                \n                                \n                               \n                            \n                            \n\n                    \n                \n                \n        \n    \n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"walls-and-gates"}