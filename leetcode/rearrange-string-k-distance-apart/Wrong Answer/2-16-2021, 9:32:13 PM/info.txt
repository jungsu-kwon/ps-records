{"id":456757818,"lang":"python3","time":"5 months, 2 weeks","timestamp":1613478733,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/456757818/","is_pending":"Not Pending","title":"Rearrange String k Distance Apart","memory":"N/A","code":"from collections import Counter\n\nclass Solution:\n\n    def rearrangeString(self, s: str, k: int) -> str:\n        if not s : \n            return ''\n\n        counter = Counter(list(s))\n        targetLen = counter.most_common()[0][1]\n\n        mergedList = []\n        for char, freq in counter.most_common():\n            mergedList += [char for i in range(freq)]\n        splitted  = [mergedList[i * targetLen:(i + 1) * targetLen] \n                     for i in range((len(mergedList) + targetLen - 1) // targetLen )]  \n        if len(splitted) == k and len(splitted[-1]) < targetLen:\n            return ''\n        elif len(splitted) < k : \n            return ''\n        ansStr,ind = '',0\n        while splitted:\n            ind = ind % len(splitted)\n            curList = splitted[ind]\n            ansStr += curList.pop(0)\n            if not curList:\n                splitted.pop(ind)\n            else:\n                ind += 1 \n        return ansStr\n\n\n\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    solver = Solution()\n    print(solver.rearrangeString('aabbccddeeeeee',3))\n        \n\n\n        ","compare_result":"111110111110111101111011111111011111111111111111111111011","title_slug":"rearrange-string-k-distance-apart"}