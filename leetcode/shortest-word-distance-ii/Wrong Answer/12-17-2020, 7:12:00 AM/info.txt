{"id":431407801,"lang":"python3","time":"7 months, 2 weeks","timestamp":1608156720,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/431407801/","is_pending":"Not Pending","title":"Shortest Word Distance II","memory":"N/A","code":"class WordDistance:\n\n    def __init__(self, words: List[str]):\n        self.occurence = {}\n        for i,word in enumerate(words) : \n            if word in self.occurence : \n                self.occurence[word].append(i)\n            else : \n                self.occurence[word] = [i]\n\n        \n\n    def shortest(self, word1: str, word2: str) -> int:\n        occurences1 = self.occurence[word1]\n        occurences2 = self.occurence[word2]\n\n        ans = len(self.occurence)\n        for o1 in occurences1 : \n            for o2 in occurences2 : \n                ans = min(abs(o1-o2),ans)\n        return ans\n        \n\n\n# Your WordDistance object will be instantiated and called as such:\n# obj = WordDistance(words)\n# param_1 = obj.shortest(word1,word2)","compare_result":"111111111110","title_slug":"shortest-word-distance-ii"}