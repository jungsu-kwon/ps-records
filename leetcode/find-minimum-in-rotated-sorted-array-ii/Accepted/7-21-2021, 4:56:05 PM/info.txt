{"id":525912776,"lang":"python3","time":"1 week, 6 days","timestamp":1626854165,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/525912776/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array II","memory":"15 MB","code":"class Solution:\n    def findMin(self, nums: List[int]) -> int:    \n        low = 0\n        high = len(nums)-1\n        while high > low:\n            pivot = low + (high - low) // 2\n            # risk of overflow: pivot = (low + high) // 2\n            # Case 1):\n            if nums[pivot] < nums[high]:\n                high = pivot \n                # alternative: high = pivot - 1\n                # too aggressive to move the `high` index,\n                # it won't work for the test case of [3, 1, 3]\n            # Case 2):\n            elif nums[pivot] > nums[high]:\n                low = pivot + 1\n            # Case 3):\n            else:\n                high -= 1\n        # the 'low' and 'high' index converge to the inflection point.\n        return nums[low]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-minimum-in-rotated-sorted-array-ii"}