{"id":525903275,"lang":"python3","time":"1 week, 6 days","timestamp":1626852733,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/525903275/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array II","memory":"N/A","code":"from typing import List\nclass Solution:\n    def findPivot(self,nums: List[int]) -> int:\n        '''\n        find rotational pivot of nums\n        '''\n        if nums[0] <= nums[-1]: return 0\n        left: int = 0\n        right: int = len(nums) - 1\n        leftVal: int = nums[0]\n\n        while (left + 1 < right):\n            mid: int = (left + right) // 2\n            if nums[mid] > nums[mid-1]:\n                return mid\n            elif nums[mid] > leftVal:\n                left = mid + 1\n            else:\n                right = mid - 1\n\n\n\n\n    def findMin(self, nums: List[int]) -> int:\n        return nums[self.findPivot(nums)]\n","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"find-minimum-in-rotated-sorted-array-ii"}