{"id":526455827,"lang":"python3","time":"1Â week, 5Â days","timestamp":1626942741,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/526455827/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array II","memory":"N/A","code":"from typing import List\nclass Solution:\n    def findMin(self, nums: List[int]) -> int:\n        left: int = 0\n        right: int = len(nums) - 1\n\n        while (left + 1 < right):\n            mid: int = (left + right) // 2\n            leftVal: int = nums[0]\n\n            midVal: int = nums[mid]\n            # print(left,right,mid,midVal)\n\n            if midVal < nums[mid - 1]:\n                return midVal\n            elif midVal < leftVal:\n                right = mid - 1\n            elif midVal > leftVal:\n                left = mid + 1\n            else:\n                left += 1\n        if nums[left] > nums[right]: return right\n        return nums[0]\n        ","compare_result":"111111111111100111111111011111110110011100011011100101011111010100111010111111110110110011011001101101101101010100111010001001111001111011110110101011011010110101010110100100001100100011110110","title_slug":"find-minimum-in-rotated-sorted-array-ii"}