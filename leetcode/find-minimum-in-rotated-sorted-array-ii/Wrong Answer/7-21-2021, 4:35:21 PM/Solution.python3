// https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii

from typing import List
class Solution:
    def findPivot(self,nums: List[int]) -> int:
        '''
        find rotational pivot of nums
        '''
        if nums[0] <= nums[-1]: return 0
        left: int = 0
        right: int = len(nums) - 1
        leftVal: int = nums[0]

        while (left + 1 < right):
            mid: int = (left + right) // 2
            if nums[mid] < nums[mid-1]:
                return mid
            elif nums[mid] >= leftVal:
                left = mid + 1
            else:
                right = mid - 1
        if nums[left] > nums[right]: return right
        return left




    def findMin(self, nums: List[int]) -> int:
        return nums[self.findPivot(nums)]
