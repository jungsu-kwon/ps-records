{"id":525904540,"lang":"python3","time":"1 week, 6 days","timestamp":1626852921,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/525904540/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array II","memory":"N/A","code":"from typing import List\nclass Solution:\n    def findPivot(self,nums: List[int]) -> int:\n        '''\n        find rotational pivot of nums\n        '''\n        if nums[0] <= nums[-1]: return 0\n        left: int = 0\n        right: int = len(nums) - 1\n        leftVal: int = nums[0]\n\n        while (left + 1 < right):\n            mid: int = (left + right) // 2\n            if nums[mid] < nums[mid-1]:\n                return mid\n            elif nums[mid] >= leftVal:\n                left = mid + 1\n            else:\n                right = mid - 1\n        if nums[left] > nums[right]: return right\n        return left\n\n\n\n\n    def findMin(self, nums: List[int]) -> int:\n        return nums[self.findPivot(nums)]\n","compare_result":"111111111111011111111100111111110001100101111111111110001111011111010010110101110111000111101111111111111000000011111101111111011111110111111101101111001101111111101111110000000000100111111111","title_slug":"find-minimum-in-rotated-sorted-array-ii"}