{"id":442618428,"lang":"python3","time":"6 months, 3 weeks","timestamp":1610575992,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/442618428/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"16.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def closestValue(self, root: TreeNode, target: float) -> int:\n        node = root\n        closest = node.val\n        diff = abs(closest-target)\n\n        while node:\n            # update closest int\n            if abs(node.val - target) < diff:\n                closest = node.val\n                diff = abs(closest-target)\n\n            if target < node.val :\n                node = node.left\n            else :\n                node = node.right\n        return closest\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value"}