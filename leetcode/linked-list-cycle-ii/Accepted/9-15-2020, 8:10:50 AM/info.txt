{"id":395801782,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1600125050,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/395801782/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"8.8 MB","code":"\nclass Solution {\npublic:\n\tListNode *detectCycle(ListNode *head) {\n\t\tif (head == nullptr) return nullptr;\n\t\tListNode* fastNode = head->next;\n\t\tListNode* slowNode = head;\n\t\tstd::vector<ListNode*> vecSlowNodes;\n\t\twhile (fastNode != nullptr)\n\t\t{\n            vecSlowNodes.push_back(slowNode);\n\t\t\tif (fastNode == slowNode){\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfastNode = (fastNode->next == nullptr) ? nullptr : fastNode->next->next;\n\t\t\tslowNode = slowNode->next;\n\t\t}\n\t\t// no cycle\n\t\tif (fastNode == nullptr) return nullptr;\n\t\t// cycle exists \n\t\tstd::vector<ListNode*> vecFastNodes;\n\t\tfor (auto t = 0; t < vecSlowNodes.size(); ++t){\n\t\t\tfastNode = fastNode->next;\n            vecFastNodes.push_back(fastNode);\n\t\t}\n        auto itSlow = vecSlowNodes.rbegin();\n        auto itFast = vecFastNodes.rbegin();\n        for (; itSlow != vecSlowNodes.rend() ;++itSlow, ++itFast){\n            if (*itSlow != *itFast)\n                return (*itSlow)->next;\n        }\n        return vecFastNodes[0];\n\t}\n};\n\n","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}