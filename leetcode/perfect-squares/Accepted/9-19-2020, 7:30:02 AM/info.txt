{"id":397625940,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1600468202,"status_display":"Accepted","runtime":"360 ms","url":"/submissions/detail/397625940/","is_pending":"Not Pending","title":"Perfect Squares","memory":"9.3 MB","code":"#include <iostream>\n#include <vector>\n\nclass Solution {\npublic:\n    int numSquares(int n) {\n\t\tstd::vector<int> vecSides;\n\t\tfor (int i = 1; i*i <= n; ++i){\n\t\t\tvecSides.push_back(i);\n\t\t}\n\n\t\tstd::vector<int> dp(n+1,0);\n        dp[1] = 1 ;\n\t\tfor (auto t = 2; t < n+1; ++t){\n\t\t\tauto minDp = t;\n\t\t\tfor (auto s = 0 ;s < vecSides.size() && vecSides[s] * vecSides[s] <= t; ++s){\n\t\t\t\tminDp = std::min(dp[t-vecSides[s] * vecSides[s]],minDp);\n\t\t\t}\n\t\t\tdp[t] = minDp + 1;\n\t\t}\n\n\t\treturn dp.back(); \n        \n    }\n};\n","compare_resulttitle_slug":"perfect-squares"}