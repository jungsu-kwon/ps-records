{"id":447013396,"lang":"python3","time":"6 months, 1 week","timestamp":1611460619,"status_display":"Accepted","runtime":"568 ms","url":"/submissions/detail/447013396/","is_pending":"Not Pending","title":"Smallest Rectangle Enclosing Black Pixels","memory":"14.8 MB","code":"BLACK = '1'\nWHITE = '0'\n\nclass Solution:\n    def minArea(self, image: List[List[str]], x: int, y: int) -> int:\n        def binarySearch(low,high,func):\n            while low < high:\n                mid = low + (high - low) // 2\n                if func(mid) : \n                    high = mid\n                else:\n                    low = mid + 1\n            return low\n\n        top = binarySearch(0,x, lambda x : any([pixel == BLACK for pixel in image[x]]))\n        bot = binarySearch(x,len(image), lambda x : all([pixel == WHITE for pixel in image[x]]))\n        left = binarySearch(0,y, lambda x : any([row[x] == BLACK for row in image]))\n        right = binarySearch(y,len(image[0]), lambda x : all([row[x] == WHITE for row in image]))\n\n        return (bot - top) * (right - left)\n\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-rectangle-enclosing-black-pixels"}