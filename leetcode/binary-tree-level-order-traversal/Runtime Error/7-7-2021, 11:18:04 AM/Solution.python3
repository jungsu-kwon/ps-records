// https://leetcode.com/problems/binary-tree-level-order-traversal

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        current = [root]
        ans = []

        while current:
            children = []
            level = []
            for node in current:
                level.append(node.val)
                if node.left: children.append(node.left)
                if node.right: children.append(node.right)
            current = children
            ans.append(level)
        return ans
        
                    



        