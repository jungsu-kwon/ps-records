{"id":518535191,"lang":"python3","time":"3 weeks, 6 days","timestamp":1625624284,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/518535191/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        current = [root]\n        ans = []\n\n        while current:\n            children = []\n            level = []\n            for node in current:\n                level.append(node.val)\n                if node.left: children.append(node.left)\n                if node.right: children.append(node.right)\n            current = children\n            ans.append(level)\n        return ans\n        \n                    \n\n\n\n        ","compare_result":"1100000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal"}