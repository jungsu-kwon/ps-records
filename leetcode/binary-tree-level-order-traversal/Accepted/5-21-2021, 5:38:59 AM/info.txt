{"id":495942984,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1621543139,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/495942984/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.5 MB","code":"#include <vector>\n#include <queue>\nusing namespace std;\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int> > ans;\n        if (!root) return ans;\n        \n        queue<TreeNode*> bfs;\n        bfs.push(root);\n        \n        while (bfs.size())\n        {\n            auto bfs_size = bfs.size();\n            vector<int> level;\n            for (auto i = 0; i < bfs_size; ++i)\n            {\n                auto node = bfs.front();\n                bfs.pop();\n\n                level.push_back(node -> val);\n\n                if (node -> left) bfs.push(node->left);\n                if (node -> right) bfs.push(node->right);\n            }\n            ans.push_back(level);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}