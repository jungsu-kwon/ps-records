// https://leetcode.com/problems/calculate-maximum-information-gain

class Solution:
    import math
    def calculateMaxInfoGain(self, petal_length: List[float], species: List[str]) -> float:
        #convert species to indicies
        n = len(petal_length)
        species_to_idx = {}
        species_idx, tups = 0, []
        for idx, ele in enumerate(species):
            if not ele in species_to_idx:
                species_to_idx[ele] = species_idx
                species_idx += 1                
            tups.append((petal_length[idx], species_to_idx[ele]))
        #sort tuples
        tups.sort(key= lambda x: x[0])
        
        
        def _info(loft):
            l = [i[1] for i in loft]
            info = 0
            for i in set(l):
                prob = l.count(i) / len(loft)
                info += -1.0*prob*math.log2(prob)
            return info
                
        total_entropy = _info(tups)
        max_entropy = 0
        for i in range(1,len(tups)):
            a1 = _info(tups[i:])*len(tups[i:])/n
            a2 = _info(tups[:i])*len(tups[:i])/n
            x = total_entropy - a1 - a2
            if x > max_entropy:
                max_entropy = x
        
        return max_entropy
