{"id":471594926,"lang":"python3","time":"4 months, 1 week","timestamp":1616535580,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/471594926/","is_pending":"Not Pending","title":"Sort Transformed Array","memory":"14.4 MB","code":"from typing import List,Tuple\n\nclass Solution:\n    def split_list(self,nums:List[int],a,b,c) -> Tuple[List[int]]:\n        if a != 0:\n            thresh = float(-b / (2.0*a))\n            l1,l2 = [num for num in nums if num < thresh],[num for num in nums if num >= thresh]\n            if a < 0:\n                return l1,l2[::-1]\n            return l1[::-1],l2\n            \n        elif b != 0:\n            if b < 0:\n                return nums[::-1],[]\n            return nums,[]\n        else:\n            return nums,[]\n\n    def apply_quad(self,num:int,a:int,b:int,c:int) -> int:\n        return c + (b * num) + (a*num*num)\n\n    def merge_lists(self,asc1 : List[int], asc2 : List[int]) -> List[int]:\n        n = len(asc1) + len(asc2)\n        ans = [-1 for i in range(n)]\n        ind1,ind2 = 0,0\n\n        while ind1 != len(asc1) and ind2 != len(asc2):\n            left,right = asc1[ind1],asc2[ind2]\n            if left < right:\n                ans[ind1+ind2] = left\n                ind1 += 1\n            else:\n                ans[ind1+ind2] = right\n                ind2 += 1\n        if ind1 == len(asc1):\n            for i in range(ind2,len(asc2)):\n                ans[ind1+i] = asc2[i]\n        else:\n            for i in range(ind1,len(asc1)):\n                ans[ind2+i] = asc1[i]\n        return ans\n    \n\n            \n        \n    def sortTransformedArray(self, nums: List[int], a: int, b: int, c: int) -> List[int]:\n        l1,l2 = self.split_list(nums,a,b,c)\n        l1 = [self.apply_quad(num,a,b,c) for num in l1]\n        l2 = [self.apply_quad(num,a,b,c) for num in l2]\n        \n        if not l2:\n            return l1\n        return self.merge_lists(l1,l2)\n\n\n\n        \n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-transformed-array"}