{"id":471580447,"lang":"python3","time":"4 months, 1 week","timestamp":1616532592,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/471580447/","is_pending":"Not Pending","title":"Sort Transformed Array","memory":"N/A","code":"from typing import List\n\nclass Solution:\n    def split_list(self,nums:List[int]) -> Tuple[List[int]]:\n        prev = nums[0]\n        for i in range(1,len(nums)):\n            cur = nums[i]\n            if cur > prev:\n                break\n        return nums[:i-1],nums[i-1:]\n\n        \n\n    def apply_quad(self,num:int,a:int,b:int,c:int) -> int:\n        return c + (b * num) + (a*num*num)\n\n    def merge_lists(self,asc1 : List[int], asc2 : List[int]) -> List[int]:\n        n = len(asc1) + len(asc2)\n        ans = [-1 for i in range(n)]\n        ind1,ind2 = 0,0\n\n        while ind1 != len(asc1) and ind2 != len(asc2):\n            left,right = asc1[ind1],asc2[ind2]\n            if left < right:\n                ans[ind1+ind2] = left\n                ind1 += 1\n            else:\n                ans[ind1+ind2] = right\n                ind2 += 1\n        if ind1 == len(asc1):\n            for i in range(ind2,len(asc2)):\n                ans[ind1+i] = asc2[i]\n        else:\n            for i in range(ind1,len(asc1)):\n                ans[ind2+i] = asc1[i]\n        return ans\n\n    def sortTransformedArray(self, nums: List[int], a: int, b: int, c: int) -> List[int]:\n        quad_list = [self.apply_quad(num,a,b,c) for num in nums]\n        dec,asc2 = self.split_list(quad_list)\n        asc1 = dec[::-1]\n        merged = self.merge_lists(asc2,asc1)\n        return merged\n\n\n        \n","compare_result":"10101011110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"sort-transformed-array"}