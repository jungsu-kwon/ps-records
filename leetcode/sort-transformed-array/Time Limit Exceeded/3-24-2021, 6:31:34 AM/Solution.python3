// https://leetcode.com/problems/sort-transformed-array

from typing import List,Tuple

class Solution:
    def split_list(self,nums:List[int]) -> Tuple[List[int]]:
        if a != 0:
            mult = 1 if a > 0 else -1
            prev = nums[0] * mult
            for i in range(1,len(nums)):
                cur = mult*nums[i]
                if cur > prev:
                    break
                prev = cur
            if mult == -1:
                return nums[:i-1],nums[i-1:][::-1]
            return nums[:i-1][::-1],nums[i-1:]

        elif b != 0:
            if b < 0:
                return nums[::-1],[]
            return nums,[]
        else:
            return nums,[]

    def apply_quad(self,num:int,a:int,b:int,c:int) -> int:
        return c + (b * num) + (a*num*num)

    def merge_lists(self,asc1 : List[int], asc2 : List[int]) -> List[int]:
        n = len(asc1) + len(asc2)
        ans = [-1 for i in range(n)]
        ind1,ind2 = 0,0

        while ind1 != len(asc1) and ind2 != len(asc2):
            left,right = asc1[ind1],asc2[ind2]
            if left < right:
                ans[ind1+ind2] = left
                ind1 += 1
            else:
                ans[ind1+ind2] = right
                ind2 += 1
        if ind1 == len(asc1):
            for i in range(ind2,len(asc2)):
                ans[ind1+i] = asc2[i]
        else:
            for i in range(ind1,len(asc1)):
                ans[ind2+i] = asc1[i]
        return ans
    

            
        
    def sortTransformedArray(self, nums: List[int], a: int, b: int, c: int) -> List[int]:
        quad_list = [self.apply_quad(num,a,b,c) for num in nums]
        l1,l2 = self.split_list(quad_list)
        
        if not l2:
            return l1
        return self.merge_lists(l1,l2)

if __name__ == '__main__':
    import random
    solver = Solution()
    for _ in range(100000):
        a = random.randint(-100,100)
        b = random.randint(-2,2)
        c = random.randint(-100,100)
        nums = [i for i in range(-100,100)]

        ans = solver.sortTransformedArray(nums,a,b,c)
        gt = sorted([solver.apply_quad(num,a,b,c) for num in nums])
        if ans != gt:
            assert 1==0


        

