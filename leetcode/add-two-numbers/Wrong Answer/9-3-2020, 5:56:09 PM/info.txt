{"id":390396005,"lang":"cpp","time":"11Â months","timestamp":1599123369,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/390396005/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n   \nprivate:\n    int convertToNumber(ListNode* l1){\n        if (l1 == nullptr)\n            return 0;\n        auto res = 0;\n        auto curNode = l1;\n        while (curNode != nullptr){\n            res += curNode->val;\n            if (curNode->next != nullptr)\n                res *= 10;\n            curNode = curNode->next;\n        }\n        return res;\n    }\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        auto sum = convertToNumber(l1) + convertToNumber(l2);\n        std::vector<int> resNums;\n        while (sum > 0 ){\n            resNums.push_back(sum % 10);\n            sum /= 10;\n        }\n             \n        ListNode *preHead = new ListNode();\n        ListNode *curNode = preHead;\n        for (auto it = resNums.begin(); it != resNums.end(); ++it){\n            curNode->next = new ListNode(*it);\n            curNode = curNode->next;\n        }\n        return preHead->next;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}