{"id":448666701,"lang":"python3","time":"6 months, 1 week","timestamp":1611784003,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/448666701/","is_pending":"Not Pending","title":"Longest Substring with At Most K Distinct Characters","memory":"14.6 MB","code":"from collections import defaultdict\nclass Solution:\n    def lengthOfLongestSubstringKDistinct(self, s: str, k: int) -> int:\n        if not k :\n            return 0\n        self.lastOcc = defaultdict(lambda x : -1)\n        self.inSubstr = set([])\n\n        start = 0\n        ans = 0\n        for i,char in enumerate(s):\n\n            if not char in self.inSubstr:\n                if len(self.inSubstr) == k:\n                    charLoc,charToPop = min([(self.lastOcc[c],c) for c in self.inSubstr],key=lambda x : x[0])\n                    self.inSubstr.remove(charToPop)\n                    start = charLoc+1\n\n                self.inSubstr.add(char)\n            self.lastOcc[char] = i\n            ans = max(ans,i-start+1)\n\n        return ans\n\n\n                \n\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-substring-with-at-most-k-distinct-characters"}