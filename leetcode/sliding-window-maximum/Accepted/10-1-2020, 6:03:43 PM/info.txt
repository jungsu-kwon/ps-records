{"id":403047570,"lang":"cpp","time":"10Â months","timestamp":1601543023,"status_display":"Accepted","runtime":"376 ms","url":"/submissions/detail/403047570/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"103 MB","code":"#include <deque>\n#include <vector>\nusing namespace std;\nclass Solution {\nprivate : \n\tvoid cleanDeque(std::deque<int> &dequeInd,std::vector<int>&nums,int i,int k ){\n\t\tif (dequeInd.size() && dequeInd.front() == i-k)\n\t\t\tdequeInd.pop_front();\n\t\twhile (dequeInd.size() && nums[dequeInd.back()] <  nums[i]){\n\t\t\tdequeInd.pop_back();\n\t\t}\n\t}\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n\t\tstd::deque<int> dequeInd;\n\t\tstd::vector<int> vecAns(nums.size()-k+1,0);\n\t\t\n\t\t// initialize deque\n\t\tfor (auto t = 0; t < k; ++t){\n\t\t\tcleanDeque(dequeInd,nums,t,k);\n\t\t\tdequeInd.push_back(t);\n\t\t}\n\t\tvecAns[0] = nums[dequeInd.front()];\n\n\t\tfor (auto t = k;t < nums.size(); ++t){\n\t\t\tcleanDeque(dequeInd,nums,t,k);\n\t\t\tdequeInd.push_back(t);\n\t\t\tvecAns[t-k+1] = nums[dequeInd.front()];\n\t\t}\n\t\treturn vecAns;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum"}