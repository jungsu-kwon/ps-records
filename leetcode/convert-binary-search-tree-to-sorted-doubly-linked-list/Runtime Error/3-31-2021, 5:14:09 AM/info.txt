{"id":474413366,"lang":"python3","time":"4Â months","timestamp":1617135249,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/474413366/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"N/A","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\"\"\"\n\nclass Solution:\n    def inorder_traversal(self,root:'Node') -> 'Node':\n        if not root:\n            return None\n\n\n        self.inorder_traversal(root.left)\n\n        if not self.head:\n            self.head = root\n\n        if self.cur:\n            self.cur.right = root\n            root.left = self.cur\n            \n        self.cur = root\n        \n\n        self.inorder_traversal(root.right)\n\n            \n\n\n\n    def treeToDoublyList(self, root: 'Node') -> 'Node':\n        self.head = None\n        self.cur = None\n\n        self.inorder_traversal(root)\n        self.head.left = self.cur\n        if self.cur:\n            self.cur.right = self.head\n\n\n        return self.head\n\n        \n        \n","compare_result":"11000000000000000000000000000000000000000000000000","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list"}