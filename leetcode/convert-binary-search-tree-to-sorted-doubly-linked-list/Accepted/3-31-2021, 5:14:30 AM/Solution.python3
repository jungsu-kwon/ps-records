// https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list

"""
# Definition for a Node.
class Node:
    def __init__(self, val, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
"""

class Solution:
    def inorder_traversal(self,root:'Node') -> 'Node':
        if not root:
            return None


        self.inorder_traversal(root.left)

        if not self.head:
            self.head = root

        if self.cur:
            self.cur.right = root
            root.left = self.cur
            
        self.cur = root
        

        self.inorder_traversal(root.right)

            



    def treeToDoublyList(self, root: 'Node') -> 'Node':
        if not root:
            return None
        self.head = None
        self.cur = None

        self.inorder_traversal(root)
        self.head.left = self.cur
        if self.cur:
            self.cur.right = self.head


        return self.head

        
        
