{"id":431606696,"lang":"python3","time":"7 months, 2 weeks","timestamp":1608201010,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/431606696/","is_pending":"Not Pending","title":"Strobogrammatic Number II","memory":"25 MB","code":"class Solution:\n    def findStrobogrammatic(self, n) :\n        ans = []\n        stack = [[' ']*n]\n        if n == 1 : \n            return ['0','1','8']\n        odd = n % 2 \n\n\n        for i  in range((n+1)//2):\n            if i == 0 :\n                sample_from = [('1','1'),('8','8'),('6','9'),('9','6')]\n            elif odd and i == (n+1)//2 -1  : \n                sample_from = [('1','1'),('8','8'),('0','0')]\n            else : \n                sample_from = [('1','1'),('8','8'),('6','9'),('9','6'),('0','0')]\n            len_stack = len(stack)\n            for j in range(len_stack):\n                elem = stack.pop(0)\n                for pair in sample_from : \n                    child = elem.copy() \n                    child[i],child[-i-1] = pair[0],pair[1]\n                    stack.append(child)\n        return [''.join(elem) for elem in stack]\n\n\nif __name__ == '__main__' :\n    solver = Solution()\n    solver.findStrobogrammatic(4)\n\n            \n\n\n\n\n\n\n\n        ","compare_result":"1111111111111","title_slug":"strobogrammatic-number-ii"}