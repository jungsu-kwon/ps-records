{"id":395288796,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1600036334,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/395288796/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"N/A","code":"class Solution {\nprivate : \n\tTreeNode *flattenTree(TreeNode* root){\n\t\tauto leftNode = root->left;\n\t\tauto rightNode = root->right;\n\t\tauto retNode = root;\n        root->left = nullptr;\n\n\t\tif (leftNode != nullptr) \n\t\t{\n\t\t\tauto leftEnd =  flattenTree(leftNode);\n\t\t\troot->right = leftNode;\n\t\t\tretNode = leftEnd;\n\t\t}\n\t\tif (rightNode != nullptr)\n\t\t{\n\t\t\tauto rightEnd = flattenTree(rightNode);\n\t\t\tretNode->right = rightNode;\n\t\t\tretNode = rightEnd;\n\n\t\t}\n\n        return retNode;\n\n\t}\npublic:\n\tvoid flatten(TreeNode* root) {\n\t\tflattenTree(root);\n    }\n};\n","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flatten-binary-tree-to-linked-list"}